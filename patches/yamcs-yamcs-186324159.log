Executing latest Jacoco+Badua (no empty probes): dataflow Coverage -> false
2020-04-11 22:03:48 DEBUG JRelifixMain$:31 - classpath: /Users/cuong/IdeaProjects/apr-repo/yamcs/yamcs-core/target/classes_temp:/Users/cuong/IdeaProjects/apr-repo/yamcs/yamcs-core/target/test-classes:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/artemis-selector-1.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/netty-all-4.0.32.Final.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/artemis-core-client-1.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/johnzon-core-0.9.5.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/jgroups-3.6.9.Final.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/jdatepicker-1.3.2.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/commons-logging-1.1.1.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/jackson-core-2.7.1.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/jboss-logging-3.3.0.Final.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/artemis-server-1.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/junit-4.12.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/artemis-native-1.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/log4j-1.2.14.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/guava-18.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/javacsv-2.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/protobuf-java-2.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/artemis-commons-1.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/geronimo-json_1.0_spec-1.0-alpha-1.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/slf4j-api-1.7.1.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/janino-2.5.15.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/yamcs-api-0.30.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/rocksdbjni-4.13.4.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/hamcrest-core-1.3.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/yamcs-xtce-0.30.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/commons-collections-3.2.1.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/protostuff-json-1.4.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/snakeyaml-1.9.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/slf4j-jdk14-1.7.1.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/jxl-2.6.10.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/artemis-jdbc-store-1.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/jcommander-1.48.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/commons-beanutils-1.9.2.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/jython-standalone-2.5.3.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/protostuff-api-1.4.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs/artemis-journal-1.5.0.jar:/Users/cuong/IdeaProjects/apr-repo/yamcs-yamcs-186324159-libs
2020-04-11 22:03:48 INFO  JRelifixMain$:33 - Parsing AST ...
2020-04-11 22:03:57 INFO  JRelifixMain$:38 - Done parsing AST!
2020-04-11 22:03:57 INFO  JRelifixMain$:40 - Initializing Collectors...
2020-04-11 22:04:06 DEBUG SeedsCollector:77 - Collected seeds: HashSet([AssignmentSeedIdentifier] this.archiveInstance=req.getInstance(), [VariableSeedIdentifier] first, [ExpressionSeedIdentifier] req.getSendAllTm(), [VariableSeedIdentifier] e, [AssignmentSeedIdentifier] ok=sendHistogramData(CommandHistoryRecorder.TABLE_NAME,TcUplinkerAdapter.CMDHIST_TUPLE_COL_CMDNAME,2000,null), [AssignmentSeedIdentifier] builder=IndexResult.newBuilder().setInstance(archiveInstance).setType("histogram").setTableName(tblName), [AssignmentSeedIdentifier] ok=sendHistogramData(EventRecorder.TABLE_NAME,"source",2000,null), [VariableSeedIdentifier] last, [VariableSeedIdentifier] query, [VariableSeedIdentifier] tmIndexer, [VariableSeedIdentifier] l, [VariableSeedIdentifier] start, [ExpressionSeedIdentifier] sc.getAlias(defaultns) != null, [VariableSeedIdentifier] streamName, [MethodInvocationSeedIdentifier] sendHistogramData(XtceTmRecorder.TABLE_NAME,XtceTmRecorder.PNAME_COLUMN,2000,tmpackets), [ExpressionSeedIdentifier] req.getSendAllEvent(), [ExpressionSeedIdentifier] tmpackets.size() > 0, [VariableSeedIdentifier] defaultns, [VariableSeedIdentifier] s, [AssignmentSeedIdentifier] ok=sendHistogramData(XtceTmRecorder.TABLE_NAME,XtceTmRecorder.PNAME_COLUMN,2000,tmpackets), [VariableSeedIdentifier] t, [VariableSeedIdentifier] stop, [VariableSeedIdentifier] name, [AssignmentSeedIdentifier] ok=sendHistogramData(ParameterRecorder.TABLE_NAME,ParameterDataLinkInitialiser.PARAMETER_TUPLE_COL_GROUP,20000,null), [VariableSeedIdentifier] db, [VariableSeedIdentifier] semaphore, [AssignmentSeedIdentifier] builder=IndexResult.newBuilder().setInstance(archiveInstance).setType("completeness"), [VariableSeedIdentifier] name2id, [VariableSeedIdentifier] num, [MethodInvocationSeedIdentifier] IndexRequestProcessor.this.sendData(builder), [VariableSeedIdentifier] tblName, [ExpressionSeedIdentifier] builder.getRecordsCount() == 0, [ExpressionSeedIdentifier] !sendData(builder), [MethodInvocationSeedIdentifier] sendCompletenessIndex(), [MethodInvocationSeedIdentifier] sendData(), [VariableSeedIdentifier] id, [VariableSeedIdentifier] req, [AssignmentSeedIdentifier] this.indexRequestListener=l, [AssignmentSeedIdentifier] id=NamedObjectId.newBuilder().setName(name).build(), [AssignmentSeedIdentifier] ok=false, [VariableSeedIdentifier] mergeTime, [ExpressionSeedIdentifier] req.getTmPacketCount() > 0, [VariableSeedIdentifier] stream, [VariableSeedIdentifier] it, [MethodInvocationSeedIdentifier] sendHistogramData(CommandHistoryRecorder.TABLE_NAME,TcUplinkerAdapter.CMDHIST_TUPLE_COL_CMDNAME,2000,null), [ExpressionSeedIdentifier] id == null, [AssignmentSeedIdentifier] sendParams=true, [ExpressionSeedIdentifier] builder.getRecordsCount() >= n, [VariableSeedIdentifier] ar, [AssignmentSeedIdentifier] this.tmIndexer=tmIndexer, [ExpressionSeedIdentifier] name2id != null, [ExpressionSeedIdentifier] req.hasStop(), [VariableSeedIdentifier] ydb, [MethodInvocationSeedIdentifier] sendHistogramData(ParameterRecorder.TABLE_NAME,ParameterDataLinkInitialiser.PARAMETER_TUPLE_COL_GROUP,20000,null), [ExpressionSeedIdentifier] req.getSendAllCmd(), [ExpressionSeedIdentifier] req.getSendCompletenessIndex(), [VariableSeedIdentifier] columnName, [ExpressionSeedIdentifier] req.getSendAllPp(), [AssignmentSeedIdentifier] this.req=req, [ExpressionSeedIdentifier] req.hasStart(), [MethodInvocationSeedIdentifier] sendData(builder), [MethodInvocationSeedIdentifier] sendHistogramData(EventRecorder.TABLE_NAME,"source",2000,null), [AssignmentSeedIdentifier] ok=sendCompletenessIndex(), [ExpressionSeedIdentifier] req.hasDefaultNamespace(), [ExpressionSeedIdentifier] (ar=it.getNextRecord()) != null, [ExpressionSeedIdentifier] sc != null, [VariableSeedIdentifier] sb, [AssignmentSeedIdentifier] ar=it.getNextRecord(), [VariableSeedIdentifier] sc, [ExpressionSeedIdentifier] sendParams, [AssignmentSeedIdentifier] id=name2id.get(name), [ExpressionSeedIdentifier] ydb.getTable(tblName) == null, [ExpressionSeedIdentifier] !IndexRequestProcessor.this.sendData(builder), [VariableSeedIdentifier] builder, [ExpressionSeedIdentifier] ok, [ExpressionSeedIdentifier] req.getPpGroupCount() > 0)
2020-04-11 22:04:06 DEBUG SeedsCollector:77 - Collected seeds: HashSet([ExpressionSeedIdentifier] request.getReverse(), [AssignmentSeedIdentifier] first=false, [ExpressionSeedIdentifier] first, [VariableSeedIdentifier] colName, [VariableSeedIdentifier] pv, [VariableSeedIdentifier] g, [ExpressionSeedIdentifier] request.hasReverse(), [ExpressionSeedIdentifier] i < t.size(), [VariableSeedIdentifier] pdb, [VariableSeedIdentifier] xtceDb, [VariableSeedIdentifier] o, [VariableSeedIdentifier] sb, [AssignmentSeedIdentifier] this.xtceDb=xtceDb, [VariableSeedIdentifier] newRequest, [AssignmentSeedIdentifier] this.request=newRequest, [VariableSeedIdentifier] t, [ExpressionSeedIdentifier] !currentGroups.isEmpty(), [ExpressionSeedIdentifier] o instanceof ParameterValue, [VariableSeedIdentifier] pvb)
2020-04-11 22:04:06 DEBUG SeedsCollector:77 - Collected seeds: HashSet([ExpressionSeedIdentifier] ydb.getTable(TABLE_NAME) == null, [VariableSeedIdentifier] e, [VariableSeedIdentifier] query, [ExpressionSeedIdentifier] sce == null, [ExpressionSeedIdentifier] config == null, [VariableSeedIdentifier] streamNames, [VariableSeedIdentifier] sc, [ExpressionSeedIdentifier] !config.containsKey("streams"), [VariableSeedIdentifier] sce, [VariableSeedIdentifier] ydb, [VariableSeedIdentifier] sn, [VariableSeedIdentifier] yamcsInstance, [AssignmentSeedIdentifier] this.yamcsInstance=yamcsInstance, [VariableSeedIdentifier] cols, [ExpressionSeedIdentifier] config.containsKey("streams"), [VariableSeedIdentifier] sceList, [VariableSeedIdentifier] config)
2020-04-11 22:04:07 DEBUG SeedsCollector:77 - Collected seeds: HashSet([ExpressionSeedIdentifier] req.hasQueryParameter("name"), [ExpressionSeedIdentifier] seek != TimeEncoding.INVALID_INSTANT, [AssignmentSeedIdentifier] name=req.getQueryParameter("name"), [VariableSeedIdentifier] packetNames, [VariableSeedIdentifier] includedParameters, [VariableSeedIdentifier] start, [AssignmentSeedIdentifier] seek=req.getQueryParameterAsDate("seek"), [AssignmentSeedIdentifier] replaySpeed=ReplaySpeed.newBuilder().setType(ReplaySpeedType.REALTIME).setParam(factor).build(), [VariableSeedIdentifier] processor, [ExpressionSeedIdentifier] !pattern.startsWith("/"), [ExpressionSeedIdentifier] req.hasQueryParameter("seek"), [VariableSeedIdentifier] regex, [AssignmentSeedIdentifier] loop=req.getQueryParameterAsBoolean("loop"), [VariableSeedIdentifier] stop, [AssignmentSeedIdentifier] speed=req.getQueryParameter("speed").toLowerCase(), [ExpressionSeedIdentifier] request.hasLoop(), [ExpressionSeedIdentifier] detail, [ExpressionSeedIdentifier] start == TimeEncoding.INVALID_INSTANT, [ExpressionSeedIdentifier] req.hasQueryParameter("clientId"), [VariableSeedIdentifier] paraPatterns, [ExpressionSeedIdentifier] !processor.isReplay(), [AssignmentSeedIdentifier] name=request.getName(), [AssignmentSeedIdentifier] seek=RestRequest.parseTime(request.getSeek()), [VariableSeedIdentifier] persistent, [AssignmentSeedIdentifier] cmdhist=req.getQueryParameterAsBoolean("cmdhist"), [VariableSeedIdentifier] rrb, [ExpressionSeedIdentifier] request.hasStop(), [ExpressionSeedIdentifier] req.hasQueryParameter("persistent"), [ExpressionSeedIdentifier] req.hasQueryParameter("cmdhist"), [ExpressionSeedIdentifier] !paraGroups.isEmpty(), [AssignmentSeedIdentifier] newState=request.getState(), [ExpressionSeedIdentifier] req.hasQueryParameter("paragroup"), [AssignmentSeedIdentifier] replaySpeed=ReplaySpeed.newBuilder().setType(ReplaySpeedType.AFAP).build(), [VariableSeedIdentifier] responseb, [AssignmentSeedIdentifier] stop=req.getQueryParameterAsDate("stop"), [ExpressionSeedIdentifier] speed != null, [ExpressionSeedIdentifier] req.hasQueryParameter("state"), [AssignmentSeedIdentifier] b=ProcessorInfo.newBuilder().setName(processor.getName()), [ExpressionSeedIdentifier] packetNames.get(0).equals("*"), [ExpressionSeedIdentifier] regex.matcher(para.getQualifiedName()).matches(), [VariableSeedIdentifier] pinfo, [AssignmentSeedIdentifier] start=req.getQueryParameterAsDate("start"), [ExpressionSeedIdentifier] request.hasSpeed(), [ExpressionSeedIdentifier] request.hasName(), [VariableSeedIdentifier] clients, [ExpressionSeedIdentifier] request.hasStart(), [VariableSeedIdentifier] type, [ExpressionSeedIdentifier] request.hasCmdhist(), [ExpressionSeedIdentifier] packetNames.size() == 1, [VariableSeedIdentifier] pattern, [VariableSeedIdentifier] b, [VariableSeedIdentifier] replaySpeed, [VariableSeedIdentifier] e, [AssignmentSeedIdentifier] b=ProcessorInfo.newBuilder(pinfo), [AssignmentSeedIdentifier] loop=request.getLoop(), [ExpressionSeedIdentifier] p != null, [VariableSeedIdentifier] packetIds, [AssignmentSeedIdentifier] start=RestRequest.parseTime(request.getStart()), [ExpressionSeedIdentifier] pattern.equals(namespace), [AssignmentSeedIdentifier] replaySpeed=ReplaySpeed.newBuilder().setType(ReplaySpeedType.FIXED_DELAY).setParam(fixedDelay).build(), [VariableSeedIdentifier] clientIds, [ExpressionSeedIdentifier] !req.getOptions().contains(Option.NO_LINK), [ExpressionSeedIdentifier] req.hasQueryParameter("ppgroup"), [VariableSeedIdentifier] p, [ExpressionSeedIdentifier] request.hasSeek(), [VariableSeedIdentifier] reqb, [VariableSeedIdentifier] name, [ExpressionSeedIdentifier] newState != null, [ExpressionSeedIdentifier] speed.endsWith("x"), [ExpressionSeedIdentifier] !packetNames.isEmpty(), [ExpressionSeedIdentifier] request.hasState(), [VariableSeedIdentifier] newState, [ExpressionSeedIdentifier] req.hasQueryParameter("loop"), [ExpressionSeedIdentifier] req.hasQueryParameter("speed"), [VariableSeedIdentifier] seek, [VariableSeedIdentifier] instance, [ExpressionSeedIdentifier] req.hasQueryParameter("paraname"), [ExpressionSeedIdentifier] req.hasQueryParameter("start"), [ExpressionSeedIdentifier] processor.getName().equals(client.getProcessorName()), [AssignmentSeedIdentifier] stop=RestRequest.parseTime(request.getStop()), [ExpressionSeedIdentifier] request.hasPersistent(), [ExpressionSeedIdentifier] resolved, [VariableSeedIdentifier] req, [ExpressionSeedIdentifier] cmdhist, [ExpressionSeedIdentifier] name == null, [MethodInvocationSeedIdentifier] toProcessorInfo(processor,req,true), [VariableSeedIdentifier] paraGroups, [VariableSeedIdentifier] fixedDelay, [VariableSeedIdentifier] mdb, [VariableSeedIdentifier] para, [AssignmentSeedIdentifier] resolved=true, [ExpressionSeedIdentifier] "afap".equals(speed), [AssignmentSeedIdentifier] cmdhist=request.getCmdhist(), [VariableSeedIdentifier] response, [ExpressionSeedIdentifier] req.hasQueryParameter("packetname"), [AssignmentSeedIdentifier] newState=req.getQueryParameter("state"), [VariableSeedIdentifier] namespace, [AssignmentSeedIdentifier] speed=request.getSpeed().toLowerCase(), [ExpressionSeedIdentifier] processor.getInstance().equals(client.getInstance()), [VariableSeedIdentifier] request, [VariableSeedIdentifier] mservice, [ExpressionSeedIdentifier] req.hasQueryParameter("stop"), [VariableSeedIdentifier] speed, [ExpressionSeedIdentifier] loop, [AssignmentSeedIdentifier] persistent=req.getQueryParameterAsBoolean("persistent"), [VariableSeedIdentifier] apiURL, [AssignmentSeedIdentifier] pattern="/" + pattern, [VariableSeedIdentifier] client, [ExpressionSeedIdentifier] stop != TimeEncoding.INVALID_INSTANT, [ExpressionSeedIdentifier] !includedParameters.isEmpty(), [VariableSeedIdentifier] factor, [AssignmentSeedIdentifier] persistent=request.getPersistent())
2020-04-11 22:04:07 DEBUG SeedsCollector:77 - Collected seeds: HashSet([VariableSeedIdentifier] newReplayTime, [MethodInvocationSeedIdentifier] initReplay(), [VariableSeedIdentifier] b, [ExpressionSeedIdentifier] first, [ExpressionSeedIdentifier] !rr.hasParameterRequest(), [VariableSeedIdentifier] e, [MethodInvocationSeedIdentifier] signalStateChange(), [ExpressionSeedIdentifier] currentRequest.getEndAction() == EndAction.QUIT, [VariableSeedIdentifier] query, [VariableSeedIdentifier] selectCmd, [AssignmentSeedIdentifier] state=ReplayState.PAUSED, [AssignmentSeedIdentifier] numPacketsSent=0, [AssignmentSeedIdentifier] state=ReplayState.RUNNING, [AssignmentSeedIdentifier] this.xtceDb=xtceDb, [ExpressionSeedIdentifier] !newRequest.hasStop(), [VariableSeedIdentifier] s, [VariableSeedIdentifier] t, [ExpressionSeedIdentifier] newRequest.hasUtcStop(), [AssignmentSeedIdentifier] state=ReplayState.INITIALIZATION, [VariableSeedIdentifier] db, [ExpressionSeedIdentifier] numPacketsSent == 0, [AssignmentSeedIdentifier] ss=new SpeedSpec(SpeedSpec.Type.ORIGINAL,"gentime",speed.getParam()), [VariableSeedIdentifier] authToken, [ExpressionSeedIdentifier] newRequest.hasStop(), [ExpressionSeedIdentifier] currentRequest.hasSpeed(), [VariableSeedIdentifier] newRequest, [AssignmentSeedIdentifier] ss=new SpeedSpec(SpeedSpec.Type.AFAP), [AssignmentSeedIdentifier] this.instance=replayServer.instance, [ExpressionSeedIdentifier] currentRequest.hasParameterRequest(), [ExpressionSeedIdentifier] state == ReplayState.ERROR, [ExpressionSeedIdentifier] newRequest.hasStart(), [AssignmentSeedIdentifier] rs=currentRequest.getSpeed(), [ExpressionSeedIdentifier] data != null, [ExpressionSeedIdentifier] currentRequest.hasPpRequest(), [ExpressionSeedIdentifier] state == ReplayState.PAUSED, [ExpressionSeedIdentifier] handlers.size() > 1, [AssignmentSeedIdentifier] dropTuple=false, [AssignmentSeedIdentifier] handlers=new HashMap<ProtoDataType,ReplayHandler>(), [ExpressionSeedIdentifier] !rr.hasPacketRequest(), [ExpressionSeedIdentifier] quitting, [AssignmentSeedIdentifier] newRequest=b.build(), [AssignmentSeedIdentifier] first=false, [MethodInvocationSeedIdentifier] setRequest(rr,authToken), [ExpressionSeedIdentifier] !(s instanceof SpeedLimitStream), [ExpressionSeedIdentifier] ignoreClose, [ExpressionSeedIdentifier] currentRequest.hasCommandHistoryRequest(), [AssignmentSeedIdentifier] ignoreClose=true, [ExpressionSeedIdentifier] currentRequest.hasEventRequest(), [VariableSeedIdentifier] replayServer, [ExpressionSeedIdentifier] currentRequest.getEndAction() == EndAction.STOP, [AssignmentSeedIdentifier] streamName="replay_stream" + counter.incrementAndGet(), [VariableSeedIdentifier] stream, [ExpressionSeedIdentifier] !quitting, [AssignmentSeedIdentifier] currentRequest=ReplayRequest.newBuilder(currentRequest).setStart(newReplayTime).build(), [VariableSeedIdentifier] newSpeed, [ExpressionSeedIdentifier] currentRequest.getReverse(), [ExpressionSeedIdentifier] newRequest.hasUtcStart(), [VariableSeedIdentifier] xtceDb, [ExpressionSeedIdentifier] state != ReplayState.INITIALIZATION, [VariableSeedIdentifier] rh, [AssignmentSeedIdentifier] ss=new SpeedSpec(SpeedSpec.Type.FIXED_DELAY,(int)speed.getParam()), [ExpressionSeedIdentifier] state != ReplayState.STOPPED, [VariableSeedIdentifier] ydb, [AssignmentSeedIdentifier] rs=ReplaySpeed.newBuilder().setType(ReplaySpeedType.REALTIME).setParam(1).build(), [MethodInvocationSeedIdentifier] quit(), [ExpressionSeedIdentifier] selectCmd != null, [AssignmentSeedIdentifier] state=ReplayState.CLOSED, [ExpressionSeedIdentifier] currentRequest.hasReverse(), [AssignmentSeedIdentifier] state=ReplayState.STOPPED, [VariableSeedIdentifier] rr, [AssignmentSeedIdentifier] this.listener=listener, [VariableSeedIdentifier] rs, [VariableSeedIdentifier] rsb, [ExpressionSeedIdentifier] currentRequest.getEndAction() == EndAction.LOOP, [AssignmentSeedIdentifier] state=ReplayState.ERROR, [VariableSeedIdentifier] data, [MethodInvocationSeedIdentifier] start(), [ExpressionSeedIdentifier] !newRequest.hasStart(), [AssignmentSeedIdentifier] currentRequest=b.build(), [MethodInvocationSeedIdentifier] toSpeedSpec(newSpeed), [VariableSeedIdentifier] sb, [ExpressionSeedIdentifier] currentRequest.hasPacketRequest(), [VariableSeedIdentifier] type, [VariableSeedIdentifier] speed, [VariableSeedIdentifier] listener, [AssignmentSeedIdentifier] currentRequest=newRequest, [AssignmentSeedIdentifier] dropTuple=true, [AssignmentSeedIdentifier] errorString=e.toString(), [ExpressionSeedIdentifier] dropTuple, [AssignmentSeedIdentifier] ignoreClose=false, [AssignmentSeedIdentifier] quitting=true, [ExpressionSeedIdentifier] db.getStream(streamName) != null, [AssignmentSeedIdentifier] this.replayServer=replayServer, [VariableSeedIdentifier] ss)
2020-04-11 22:04:12 DEBUG SeedsCollector:77 - Collected seeds: HashSet([ExpressionSeedIdentifier] "spline".equalsIgnoreCase(type), [VariableSeedIdentifier] paraRef, [VariableSeedIdentifier] version, [AssignmentSeedIdentifier] absoluteOffset=-1, [ExpressionSeedIdentifier] "boolean".equalsIgnoreCase(rawtype), [MethodInvocationSeedIdentifier] loadAlarmsSheet(spaceSystem,sheetNamePrefix + SHEET_ALARMS), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_RANGEHIGH), [ExpressionSeedIdentifier] stop < start, [MethodInvocationSeedIdentifier] hasColumn(cells,IDX_CONT_PARA_NAME), [AssignmentSeedIdentifier] cells=jumpToRow(sheet,end), [AssignmentSeedIdentifier] ae=new ArgumentEntry(counter,container,relpos,ReferenceLocationType.previousEntry,arg), [ExpressionSeedIdentifier] cmdEnd < sheet.getRows(), [VariableSeedIdentifier] size, [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CONT_PARA_NAME), [VariableSeedIdentifier] stop, [VariableSeedIdentifier] supportedVersion, [VariableSeedIdentifier] rParamName, [AssignmentSeedIdentifier] condition=new ANDedConditions(), [AssignmentSeedIdentifier] minViolations=Integer.parseInt(cells[IDX_ALARM_MIN_VIOLATIONS].getContents()), [AssignmentSeedIdentifier] ((FloatDataEncoding)encoding).defaultCalibrator=c, [AssignmentSeedIdentifier] absoluteOffset=0, [AssignmentSeedIdentifier] ((IntegerDataEncoding)encoding).encoding=IntegerDataEncoding.Encoding.signMagnitude, [ExpressionSeedIdentifier] spec.endsWith(")"), [ExpressionSeedIdentifier] de instanceof BooleanDataEncoding, [AssignmentSeedIdentifier] ((BinaryParameterType)ptype).encoding=encoding, [ExpressionSeedIdentifier] param != null, [VariableSeedIdentifier] part, [VariableSeedIdentifier] calib, [ExpressionSeedIdentifier] "y".equalsIgnoreCase(calib), [ExpressionSeedIdentifier] sheet == null, [ExpressionSeedIdentifier] !"enumerated".equalsIgnoreCase(engtype), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALGO_PARA_INOUT), [ExpressionSeedIdentifier] para != null, [VariableSeedIdentifier] timeout, [ExpressionSeedIdentifier] rValue.endsWith("\""), [ExpressionSeedIdentifier] lParam == null, [AssignmentSeedIdentifier] encoding=new BinaryDataEncoding(name,bitlength), [AssignmentSeedIdentifier] tas=cells[IDX_CMDVERIF_ONFAIL].getContents(), [AssignmentSeedIdentifier] cells=jumpToRow(sheet,start), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDOPT_TXCONST_TIMEOUT), [ExpressionSeedIdentifier] "string".equalsIgnoreCase(rawtype), [ExpressionSeedIdentifier] triggerText.isEmpty(), [AssignmentSeedIdentifier] exc=new SpreadsheetLoadException(ctx,error), [ExpressionSeedIdentifier] context == null, [ExpressionSeedIdentifier] value.startsWith("\""), [ExpressionSeedIdentifier] "float".equalsIgnoreCase(engtype), [AssignmentSeedIdentifier] maxInclusive=Double.parseDouble(cells[IDX_CMD_RANGEHIGH].getContents()), [VariableSeedIdentifier] ae, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_SEVERE_TRIGGER), [ExpressionSeedIdentifier] criteriaString.endsWith(")"), [VariableSeedIdentifier] raw, [VariableSeedIdentifier] rParam, [AssignmentSeedIdentifier] timeout=Long.parseLong(cells[IDX_CMDOPT_TXCONST_TIMEOUT].getContents()), [MethodInvocationSeedIdentifier] loadSheets(), [MethodInvocationSeedIdentifier] addAlarmRagne(para,context,trigger,triggerValue,AlarmLevels.critical), [VariableSeedIdentifier] column, [ExpressionSeedIdentifier] criteriaString.startsWith("|("), [VariableSeedIdentifier] triggerText, [VariableSeedIdentifier] ipt, [ExpressionSeedIdentifier] absoluteoffset == -1, [ExpressionSeedIdentifier] "bytestream".equalsIgnoreCase(rawtype), [AssignmentSeedIdentifier] ptype=new EnumeratedParameterType(calib), [AssignmentSeedIdentifier] spline=new ArrayList<SplinePoint>(), [AssignmentSeedIdentifier] floatStringEncoding.defaultCalibrator=c, [AssignmentSeedIdentifier] absoluteoffset+=repeated * size, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_WATCH_TRIGGER), [AssignmentSeedIdentifier] ss=ss1, [MethodInvocationSeedIdentifier] toComparison(spaceSystem,part), [AssignmentSeedIdentifier] encoding=new BinaryDataEncoding(name,sizeInBits), [AssignmentSeedIdentifier] sc=spaceSystem.getSequenceContainer(parent), [VariableSeedIdentifier] parent, [AssignmentSeedIdentifier] ((StringParameterType)ptype).encoding=encoding, [ExpressionSeedIdentifier] xas == null, [ExpressionSeedIdentifier] de instanceof BinaryDataEncoding, [VariableSeedIdentifier] aal, [ExpressionSeedIdentifier] de instanceof IntegerDataEncoding, [ExpressionSeedIdentifier] !parents.containsKey(parent), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_DISTRESS_TRIGGER), [ExpressionSeedIdentifier] cells[0].getContents().equals(""), [VariableSeedIdentifier] unitType, [AssignmentSeedIdentifier] rootSpaceSystem=new SpaceSystem(name), [ExpressionSeedIdentifier] criteriaString.startsWith("&("), [AssignmentSeedIdentifier] sizeInBits=Integer.parseInt(cells[IDX_CMD_SIZEINBITS].getContents()), [MethodInvocationSeedIdentifier] parseConditionList(spaceSystem,(ExpressionList)condition,spec.substring(2,spec.length() - 1),quotes), [ExpressionSeedIdentifier] "DerivedValue".equalsIgnoreCase(rawtype), [ExpressionSeedIdentifier] engtype.isEmpty(), [MethodInvocationSeedIdentifier] loadContainersSheet(spaceSystem,sheetNamePrefix + SHEET_CONTAINERS), [ExpressionSeedIdentifier] rValue.startsWith("”"), [AssignmentSeedIdentifier] minInclusive=UnsignedLongs.decode(cells[IDX_CMD_RANGELOW].getContents()), [VariableSeedIdentifier] a, [ExpressionSeedIdentifier] value.endsWith("\""), [VariableSeedIdentifier] c, [MethodInvocationSeedIdentifier] loadParametersSheet(spaceSystem,sheetNamePrefix + SHEET_LOCAL_PARAMETERS,DataSource.LOCAL), [VariableSeedIdentifier] d, [MethodInvocationSeedIdentifier] toBooleanExpression(spaceSystem,spec,quotes), [VariableSeedIdentifier] e, [VariableSeedIdentifier] comparisonString, [VariableSeedIdentifier] i, [VariableSeedIdentifier] cl, [AssignmentSeedIdentifier] ((IntegerArgumentType)atype).signed=false, [ExpressionSeedIdentifier] cells.length > IDX_CONT_PARENT, [VariableSeedIdentifier] m, [VariableSeedIdentifier] n, [AssignmentSeedIdentifier] context=toMatchCriteria(spaceSystem,contextString), [VariableSeedIdentifier] encoding, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_CONTEXT), [MethodInvocationSeedIdentifier] jumpToRow(sheet,i), [VariableSeedIdentifier] criteriaString, [VariableSeedIdentifier] p, [VariableSeedIdentifier] s, [VariableSeedIdentifier] outputParameter, [VariableSeedIdentifier] t, [VariableSeedIdentifier] cw, [ExpressionSeedIdentifier] cells.length > IDX_CMD_PARENT, [VariableSeedIdentifier] v, [VariableSeedIdentifier] x, [ExpressionSeedIdentifier] cell.getType() == CellType.NUMBER_FORMULA, [ExpressionSeedIdentifier] sc.getBaseContainer() == null, [VariableSeedIdentifier] containers, [ExpressionSeedIdentifier] triggerText.startsWith("OnPeriodicRate"), [MethodInvocationSeedIdentifier] switchToSheet(SHEET_GENERAL,required), [AssignmentSeedIdentifier] paraname=m.group(2), [ExpressionSeedIdentifier] "int".equalsIgnoreCase(engType), [VariableSeedIdentifier] dateCell, [ExpressionSeedIdentifier] "string".equalsIgnoreCase(engType), [ExpressionSeedIdentifier] "=".equals(op), [VariableSeedIdentifier] de, [AssignmentSeedIdentifier] encoding=new FloatDataEncoding(name,sizeInBits,byteOrder), [VariableSeedIdentifier] inputParameter, [VariableSeedIdentifier] paramName, [ExpressionSeedIdentifier] i < n, [AssignmentSeedIdentifier] pol_coef=new double[end - start], [ExpressionSeedIdentifier] "uint".equalsIgnoreCase(engType), [MethodInvocationSeedIdentifier] loadCalibrationSheet(spaceSystem,sheetNamePrefix + SHEET_CALIBRATION), [VariableSeedIdentifier] dt, [AssignmentSeedIdentifier] rawType=cells[IDX_CMD_RAWTYPE].getContents(), [AssignmentSeedIdentifier] se=new ContainerEntry(counter,container,relpos,ReferenceLocationType.previousEntry,sc), [ExpressionSeedIdentifier] parentCmd == null, [ExpressionSeedIdentifier] calib == null, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_ONSUCCESS), [ExpressionSeedIdentifier] "double".equalsIgnoreCase(rawType), [VariableSeedIdentifier] intRepresentation, [VariableSeedIdentifier] sizeInBits, [VariableSeedIdentifier] rep, [VariableSeedIdentifier] enumeration, [ExpressionSeedIdentifier] !rawExpression.startsWith("&"), [ExpressionSeedIdentifier] rawType.toLowerCase().startsWith("prependedsizestring"), [AssignmentSeedIdentifier] rParamRef=new ParameterInstanceRef(rParam,rParamCalibrated), [AssignmentSeedIdentifier] se=new ParameterEntry(counter,container,relpos,ReferenceLocationType.previousEntry,param), [ExpressionSeedIdentifier] i < cmdEnd, [MethodInvocationSeedIdentifier] loadCommandOptionsSheet(spaceSystem,sheetNamePrefix + SHEET_COMMANDOPTIONS), [AssignmentSeedIdentifier] xas=new XtceAliasSet(), [ExpressionSeedIdentifier] absoluteoffset != -1, [AssignmentSeedIdentifier] ((IntegerParameterType)ptype).encoding=encoding, [AssignmentSeedIdentifier] reportType=AlarmReportType.ON_SEVERITY_CHANGE, [VariableSeedIdentifier] sheetNamePrefix, [VariableSeedIdentifier] rate, [VariableSeedIdentifier] hexValue, [AssignmentSeedIdentifier] parent=cells[IDX_CONT_PARENT].getContents(), [ExpressionSeedIdentifier] atype instanceof StringArgumentType, [AssignmentSeedIdentifier] cwr=TimeWindowIsRelativeToType.valueOf(s), [ExpressionSeedIdentifier] opType == null, [AssignmentSeedIdentifier] calib=null, [AssignmentSeedIdentifier] se=new ParameterEntry(counter,container,absoluteoffset,ReferenceLocationType.containerStart,param), [VariableSeedIdentifier] significance, [ExpressionSeedIdentifier] sc == null, [VariableSeedIdentifier] pol_coef, [AssignmentSeedIdentifier] supported=true, [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CMD_ARGNAME), [ExpressionSeedIdentifier] "boolean".equalsIgnoreCase(engType), [AssignmentSeedIdentifier] rate=new RateInStream(expint), [ExpressionSeedIdentifier] lParamName.endsWith(".raw"), [VariableSeedIdentifier] terminationChar, [AssignmentSeedIdentifier] relpos=Integer.decode(cells[IDX_CMD_RELPOS].getContents()), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_FLAGS), [ExpressionSeedIdentifier] paraInout == null, [ExpressionSeedIdentifier] cells[0].getContents().startsWith("#"), [ExpressionSeedIdentifier] "2c".equals(intRepresentation), [ExpressionSeedIdentifier] "uint64".equalsIgnoreCase(engtype), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALGO_TRIGGER), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_RAWTYPE), [AssignmentSeedIdentifier] repeated=addRepeat(se,repeat), [AssignmentSeedIdentifier] rawExpression="&(" + rawExpression + ")", [MethodInvocationSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_TYPE), [ExpressionSeedIdentifier] cells.length <= IDX_CONT_CONDITION, [VariableSeedIdentifier] algoName, [VariableSeedIdentifier] enumValue, [MethodInvocationSeedIdentifier] loadCommandVerificationSheet(spaceSystem,sheetNamePrefix + SHEET_COMMANDVERIFICATION), [ExpressionSeedIdentifier] c == null, [AssignmentSeedIdentifier] units=cells[IDX_PARAM_ENGUNIT].getContents(), [MethodInvocationSeedIdentifier] toComparison(spaceSystem,criteriaString), [ExpressionSeedIdentifier] atype instanceof EnumeratedArgumentType, [VariableSeedIdentifier] floatStringEncoding, [VariableSeedIdentifier] end, [ExpressionSeedIdentifier] paraRef.startsWith(SystemParameterDb.YAMCS_CMDHIST_SPACESYSTEM_NAME), [VariableSeedIdentifier] paramEnd, [VariableSeedIdentifier] maxInclusive, [AssignmentSeedIdentifier] encoding=new BooleanDataEncoding(name), [ExpressionSeedIdentifier] (sizeInBits & 0x7) != 0, [ExpressionSeedIdentifier] "state".equals(trigger), [VariableSeedIdentifier] trigger, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_STAGE), [MethodInvocationSeedIdentifier] parseBooleanExpression(spaceSystem,criteriaString), [ExpressionSeedIdentifier] balance == 0, [VariableSeedIdentifier] loaderCompatVersion, [VariableSeedIdentifier] fpt, [ExpressionSeedIdentifier] ((EnumeratedArgumentType)atype).getEncoding() != null, [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CMD_ENGTYPE), [VariableSeedIdentifier] engType, [ExpressionSeedIdentifier] instance > 0, [AssignmentSeedIdentifier] ((EnumeratedParameterType)ptype).encoding=encoding, [ExpressionSeedIdentifier] rValue.startsWith("$"), [ExpressionSeedIdentifier] !hasColumn(cells,IDX_ALARM_PARAM_NAME), [ExpressionSeedIdentifier] matcher.matches(), [ExpressionSeedIdentifier] !description.isEmpty(), [AssignmentSeedIdentifier] encoding=new IntegerDataEncoding(name,bitlength), [ExpressionSeedIdentifier] rawtype.toLowerCase().startsWith("prependedsizestring"), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_REPORT), [VariableSeedIdentifier] contents, [ExpressionSeedIdentifier] cell.getType() == CellType.NUMBER, [AssignmentSeedIdentifier] alarm=(context == null) ? ipt.getDefaultAlarm() : ipt.getNumericContextAlarm(context), [ExpressionSeedIdentifier] cmd.getArgument(name) != null, [VariableSeedIdentifier] argAssignment, [ExpressionSeedIdentifier] endBracket != -1, [ExpressionSeedIdentifier] cells.length < 3, [ExpressionSeedIdentifier] value.endsWith("”"), [VariableSeedIdentifier] cmdVerifier, [ExpressionSeedIdentifier] !end, [AssignmentSeedIdentifier] maxInclusive=Long.decode(cells[IDX_CMD_RANGEHIGH].getContents()), [ExpressionSeedIdentifier] bitlength == -1, [VariableSeedIdentifier] units, [AssignmentSeedIdentifier] criteria=toMatchCriteria(spaceSystem,condition), [ExpressionSeedIdentifier] "low".equals(trigger), [VariableSeedIdentifier] description, [VariableSeedIdentifier] PARAMETER_PATTERN, [ExpressionSeedIdentifier] "string".equalsIgnoreCase(engtype), [AssignmentSeedIdentifier] type="spline", [ExpressionSeedIdentifier] !"python".equals(algorithmLanguage), [AssignmentSeedIdentifier] condition=cells[IDX_CONT_CONDITION].getContents(), [VariableSeedIdentifier] balance, [AssignmentSeedIdentifier] exp="", [AssignmentSeedIdentifier] absoluteOffset=loadArgument(cells,cmd,container,absoluteOffset,counter), [ExpressionSeedIdentifier] cells.length < 1, [AssignmentSeedIdentifier] calib=cells[IDX_CMD_CALIBRATION].getContents(), [AssignmentSeedIdentifier] criteriaString=criteriaString.trim(), [VariableSeedIdentifier] parameterInstance, [ExpressionSeedIdentifier] de == null, [VariableSeedIdentifier] pname, [VariableSeedIdentifier] ept, [ExpressionSeedIdentifier] cells.length >= 3, [AssignmentSeedIdentifier] slevel=Significance.Levels.valueOf(significance), [ExpressionSeedIdentifier] cells.length >= 2, [VariableSeedIdentifier] slevel, [ExpressionSeedIdentifier] spaceSystem.getRootSequenceContainer() == null, [VariableSeedIdentifier] rawtype, [ExpressionSeedIdentifier] errorPersists(), [ExpressionSeedIdentifier] flags.contains("L"), [AssignmentSeedIdentifier] rValue=quotes.remove(0), [MethodInvocationSeedIdentifier] addAlarmRagne(para,context,trigger,triggerValue,AlarmLevels.severe), [AssignmentSeedIdentifier] absoluteOffset+=sizeInBits, [ExpressionSeedIdentifier] cells == null, [VariableSeedIdentifier] entry, [AssignmentSeedIdentifier] type=CommandVerifier.Type.valueOf(types), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_NAME), [VariableSeedIdentifier] cmd, [VariableSeedIdentifier] engtype, [VariableSeedIdentifier] constraint, [VariableSeedIdentifier] rawType, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_DEFVALUE), [ExpressionSeedIdentifier] atype instanceof BooleanArgumentType, [MethodInvocationSeedIdentifier] jumpToRow(sheet,cmdEnd), [VariableSeedIdentifier] absoluteoffset, [MethodInvocationSeedIdentifier] toBooleanExpression(spaceSystem,expression,quotes), [VariableSeedIdentifier] spline, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_MIN_VIOLATIONS), [ExpressionSeedIdentifier] ptype instanceof BinaryParameterType, [ExpressionSeedIdentifier] flags.contains("l"), [AssignmentSeedIdentifier] atype=new BinaryArgumentType(name), [AssignmentSeedIdentifier] absoluteOffset=Integer.decode(parent.substring(x + 1)), [ExpressionSeedIdentifier] m.find(), [AssignmentSeedIdentifier] bitlength=Integer.decode(bitls), [ExpressionSeedIdentifier] "fixedstring".equalsIgnoreCase(rawtype), [ExpressionSeedIdentifier] "int".equalsIgnoreCase(engtype), [ExpressionSeedIdentifier] enumeration == null, [AssignmentSeedIdentifier] alarm=(context == null) ? ept.getDefaultAlarm() : ept.getContextAlarm(context), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_CRITICAL_VALUE), [VariableSeedIdentifier] context, [MethodInvocationSeedIdentifier] toArgumentAssignmentList(argAssignment), [AssignmentSeedIdentifier] calib=cells[IDX_PARAM_CALIBRATION].getContents(), [AssignmentSeedIdentifier] parent=cells[IDX_CMD_PARENT].getContents(), [AssignmentSeedIdentifier] reportType=AlarmReportType.ON_VALUE_CHANGE, [ExpressionSeedIdentifier] idx != -1, [ExpressionSeedIdentifier] "high".equals(trigger), [VariableSeedIdentifier] level, [ExpressionSeedIdentifier] "binary".equalsIgnoreCase(engtype), [ExpressionSeedIdentifier] "int64".equalsIgnoreCase(engtype), [ExpressionSeedIdentifier] !supported, [AssignmentSeedIdentifier] rValue=rValue.substring(1,rValue.length() - 1), [VariableSeedIdentifier] lParamCalibrated, [ExpressionSeedIdentifier] flags.contains("M"), [ExpressionSeedIdentifier] ptype instanceof EnumeratedParameterType, [MethodInvocationSeedIdentifier] getNumber(cells[IDX_CALIB_CALIB2]), [VariableSeedIdentifier] condition, [VariableSeedIdentifier] intStringEncoding, [ExpressionSeedIdentifier] rParamName.endsWith(".raw"), [MethodInvocationSeedIdentifier] loadArgument(cells,cmd,container,absoluteOffset,counter), [ExpressionSeedIdentifier] !rawExpression.startsWith("|"), [VariableSeedIdentifier] stage, [VariableSeedIdentifier] header, [ExpressionSeedIdentifier] true, [AssignmentSeedIdentifier] workbook=Workbook.getWorkbook(ssFile,ws), [AssignmentSeedIdentifier] minViolations=-1, [VariableSeedIdentifier] parents, [VariableSeedIdentifier] col, [ExpressionSeedIdentifier] "string".equalsIgnoreCase(rawType), [ExpressionSeedIdentifier] cells.length > 0, [VariableSeedIdentifier] instance, [VariableSeedIdentifier] argname, [ExpressionSeedIdentifier] rParam == null, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CONT_DESCRIPTION), [AssignmentSeedIdentifier] containerSizeInBits=Integer.decode(cells[IDX_CONT_SIZEINBITS].getContents()), [VariableSeedIdentifier] ptype, [ExpressionSeedIdentifier] !"".equals(units), [VariableSeedIdentifier] mcc, [ExpressionSeedIdentifier] atype instanceof BinaryArgumentType, [VariableSeedIdentifier] cell, [ExpressionSeedIdentifier] triggerText.startsWith("none"), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CONT_SIZEINBITS), [ExpressionSeedIdentifier] "in".equalsIgnoreCase(paraInout), [VariableSeedIdentifier] reportType, [VariableSeedIdentifier] shortDescription, [VariableSeedIdentifier] mc, [VariableSeedIdentifier] fve, [ExpressionSeedIdentifier] "double".equalsIgnoreCase(engType), [MethodInvocationSeedIdentifier] e.recheck(), [MethodInvocationSeedIdentifier] toCondition(spaceSystem,spec,quotes), [ExpressionSeedIdentifier] j < paramEnd, [ExpressionSeedIdentifier] "float".equalsIgnoreCase(engType), [VariableSeedIdentifier] bitlength, [AssignmentSeedIdentifier] ptype=new IntegerParameterType(name), [MethodInvocationSeedIdentifier] addAlarmRagne(para,context,trigger,triggerValue,AlarmLevels.watch), [ExpressionSeedIdentifier] de instanceof StringDataEncoding, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_WARNING_TRIGGER), [MethodInvocationSeedIdentifier] addAlarmRagne(para,context,trigger,triggerValue,AlarmLevels.warning), [AssignmentSeedIdentifier] pname=pname.substring(0,idx), [AssignmentSeedIdentifier] reason=cells[IDX_CMDOPT_SIGNIFICANCE_REASON].getContents(), [ExpressionSeedIdentifier] name.length() == 0, [ExpressionSeedIdentifier] paramEnd < sheet.getRows(), [ExpressionSeedIdentifier] type == CommandVerifier.Type.container, [ExpressionSeedIdentifier] "".equals(parent), [AssignmentSeedIdentifier] cells=jumpToRow(sheet,cmdEnd), [AssignmentSeedIdentifier] ptype=new FloatParameterType(name), [ExpressionSeedIdentifier] "uint".equalsIgnoreCase(rawtype), [VariableSeedIdentifier] algorithmLanguage, [AssignmentSeedIdentifier] ae=new ArgumentEntry(counter,container,absoluteOffset,ReferenceLocationType.containerStart,arg), [AssignmentSeedIdentifier] absoluteOffset+=relpos, [VariableSeedIdentifier] nd, [ExpressionSeedIdentifier] !hasColumn(cells,IDX_ALGO_PARA_REF), [AssignmentSeedIdentifier] cells=jumpToRow(sheet,j), [MethodInvocationSeedIdentifier] hasColumn(cells,IDX_CMD_ENGTYPE), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CONT_EXPECTED_INTERVAL), [MethodInvocationSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_CHECKWINDOW), [AssignmentSeedIdentifier] container.restrictionCriteria=toMatchCriteria(spaceSystem,condition), [AssignmentSeedIdentifier] ctx.row=0, [AssignmentSeedIdentifier] date=cells[IDX_LOG_DATE].getContents(), [VariableSeedIdentifier] nr, [ExpressionSeedIdentifier] argAssignment != null, [VariableSeedIdentifier] minInclusive, [VariableSeedIdentifier] contextString, [ExpressionSeedIdentifier] cells.length > IDX_ALGO_PARA_INSTANCE, [ExpressionSeedIdentifier] !exp.isEmpty(), [AssignmentSeedIdentifier] parentCmd=spaceSystem.getMetaCommand(parent), [MethodInvocationSeedIdentifier] hasColumn(cells,IDX_CMD_ARGNAME), [ExpressionSeedIdentifier] spec.startsWith("&("), [ExpressionSeedIdentifier] "polynomial".equalsIgnoreCase(type), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_ONFAIL), [AssignmentSeedIdentifier] calib=name, [MethodInvocationSeedIdentifier] addAlarmRagne(para,context,trigger,triggerValue,AlarmLevels.distress), [ExpressionSeedIdentifier] !"".equals(cells[IDX_ALGO_PARA_INSTANCE].getContents()), [VariableSeedIdentifier] ss1, [ExpressionSeedIdentifier] para == null, [VariableSeedIdentifier] repeat, [ExpressionSeedIdentifier] "raw".equals(t), [ExpressionSeedIdentifier] spec.startsWith("|("), [VariableSeedIdentifier] row, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_SEVERE_VALUE), [AssignmentSeedIdentifier] ((IntegerDataEncoding)encoding).defaultCalibrator=c, [ExpressionSeedIdentifier] para.getParameterType() instanceof EnumeratedParameterType, [ExpressionSeedIdentifier] ((EnumeratedParameterType)ptype).getEncoding().getSizeInBits() != encoding.getSizeInBits(), [VariableSeedIdentifier] algorithm, [VariableSeedIdentifier] op, [VariableSeedIdentifier] types, [ExpressionSeedIdentifier] end < sheet.getRows(), [ExpressionSeedIdentifier] triggerText.startsWith("OnInputParameterUpdate"), [ExpressionSeedIdentifier] "double".equalsIgnoreCase(engtype), [ExpressionSeedIdentifier] "binary".equalsIgnoreCase(rawType), [ExpressionSeedIdentifier] x != -1, [VariableSeedIdentifier] start, [VariableSeedIdentifier] firstRow, [ExpressionSeedIdentifier] absoluteOffset != -1, [VariableSeedIdentifier] filename, [ExpressionSeedIdentifier] param == null, [ExpressionSeedIdentifier] sheetNamePrefix.isEmpty(), [VariableSeedIdentifier] regex, [AssignmentSeedIdentifier] se=new ContainerEntry(counter,container,absoluteoffset,ReferenceLocationType.containerStart,sc), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CONT_RELPOS), [ExpressionSeedIdentifier] "enumeration".equalsIgnoreCase(type), [VariableSeedIdentifier] relevantSheets, [ExpressionSeedIdentifier] ((EnumeratedArgumentType)atype).getEncoding().getSizeInBits() != encoding.getSizeInBits(), [ExpressionSeedIdentifier] value.startsWith("”"), [AssignmentSeedIdentifier] exp+=spec.charAt(i), [ExpressionSeedIdentifier] supported, [ExpressionSeedIdentifier] cells.length > IDX_PARAM_ENGUNIT, [AssignmentSeedIdentifier] condition=toCondition(spaceSystem,spec,quotes), [AssignmentSeedIdentifier] value=value.substring(1,value.length() - 1), [ExpressionSeedIdentifier] "bytestream".equalsIgnoreCase(rawType), [ExpressionSeedIdentifier] start < sheet.getRows(), [ExpressionSeedIdentifier] param.parameterType instanceof EnumeratedParameterType, [ExpressionSeedIdentifier] atype instanceof FloatArgumentType, [VariableSeedIdentifier] reason, [ExpressionSeedIdentifier] start >= sheet.getRows(), [ExpressionSeedIdentifier] rValue.startsWith("\""), [VariableSeedIdentifier] startBracket, [ExpressionSeedIdentifier] de instanceof FloatDataEncoding, [ExpressionSeedIdentifier] enumValue == null, [AssignmentSeedIdentifier] se.repeatEntry.count=new DynamicIntegerValue(), [ExpressionSeedIdentifier] "enumerated".equalsIgnoreCase(engtype), [ExpressionSeedIdentifier] firstRow[i].getContents().startsWith("namespace:"), [ExpressionSeedIdentifier] xas != null, [AssignmentSeedIdentifier] minInclusive=Double.parseDouble(cells[IDX_CMD_RANGELOW].getContents()), [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CMDVERIF_TYPE), [ExpressionSeedIdentifier] atype instanceof IntegerArgumentType, [AssignmentSeedIdentifier] fve=new FixedValueEntry(counter,container,relpos,ReferenceLocationType.previousEntry,argname,binaryValue,sizeInBits), [AssignmentSeedIdentifier] cond=new Condition(OperatorType.stringToOperator(op),lParamRef,rParamRef), [AssignmentSeedIdentifier] cells=jumpToRow(sheet,i), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_PARAM_NAME), [AssignmentSeedIdentifier] maxInclusive=UnsignedLongs.decode(cells[IDX_CMD_RANGEHIGH].getContents()), [VariableSeedIdentifier] rawExpression, [MethodInvocationSeedIdentifier] hasColumn(cells,IDX_CALIB_CALIB1), [AssignmentSeedIdentifier] rawExpression=rawExpression.trim(), [VariableSeedIdentifier] exp, [VariableSeedIdentifier] checkws, [ExpressionSeedIdentifier] rawtype.toLowerCase().startsWith("terminatedstring"), [AssignmentSeedIdentifier] previousContext=context, [AssignmentSeedIdentifier] supported=loaderCompatVersion.equals(sheetCompatVersion), [ExpressionSeedIdentifier] criteriaString.contains(";"), [VariableSeedIdentifier] ctx, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDOPT_SIGNIFICANCE_REASON), [ExpressionSeedIdentifier] algo == null, [ExpressionSeedIdentifier] bitlength != -1, [VariableSeedIdentifier] expression, [AssignmentSeedIdentifier] ctx.file=new File(filename).getName(), [ExpressionSeedIdentifier] parentCmd != null, [MethodInvocationSeedIdentifier] getNumber(cells[IDX_CALIB_CALIB1]), [AssignmentSeedIdentifier] alarm=(context == null) ? fpt.getDefaultAlarm() : fpt.getNumericContextAlarm(context), [VariableSeedIdentifier] conditions, [MethodInvocationSeedIdentifier] loadSpaceSystem(prefix,ss), [AssignmentSeedIdentifier] encoding=new IntegerDataEncoding(name,sizeInBits,byteOrder), [AssignmentSeedIdentifier] parent=null, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_WATCH_VALUE), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_WARNING_VALUE), [AssignmentSeedIdentifier] ((BooleanParameterType)ptype).encoding=encoding, [ExpressionSeedIdentifier] enumerations.containsKey(calib), [MethodInvocationSeedIdentifier] getAliases(firstRow,cells), [AssignmentSeedIdentifier] absoluteoffset=Integer.decode(parent.substring(x + 1)), [AssignmentSeedIdentifier] flags=cells[IDX_CMD_FLAGS].getContents(), [VariableSeedIdentifier] algo, [MethodInvocationSeedIdentifier] loadGeneralSheet(true), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_DESCRIPTION), [VariableSeedIdentifier] algorithmText, [ExpressionSeedIdentifier] m.matches(), [AssignmentSeedIdentifier] condition=new ORedConditions(), [ExpressionSeedIdentifier] i < sheet.getRows(), [ExpressionSeedIdentifier] !"".equals(cells[IDX_ALGO_PARA_NAME].getContents()), [AssignmentSeedIdentifier] ctx.row=row + 1, [AssignmentSeedIdentifier] date=new SimpleDateFormat("dd-MMM-YYYY").format(dt), [AssignmentSeedIdentifier] rParamRef=null, [ExpressionSeedIdentifier] sc != null, [AssignmentSeedIdentifier] encoding=new StringDataEncoding(name,StringDataEncoding.SizeType.TerminationChar), [VariableSeedIdentifier] repeated, [VariableSeedIdentifier] sc, [VariableSeedIdentifier] se, [AssignmentSeedIdentifier] repeat=m.group(1), [VariableSeedIdentifier] arg, [ExpressionSeedIdentifier] param.parameterType instanceof IntegerParameterType, [MethodInvocationSeedIdentifier] requireString(cells,1), [ExpressionSeedIdentifier] ((EnumeratedParameterType)ptype).getEncoding() != null, [VariableSeedIdentifier] pref, [MethodInvocationSeedIdentifier] jumpToRow(sheet,1), [MethodInvocationSeedIdentifier] loadAlgorithmsSheet(spaceSystem,sheetNamePrefix + SHEET_ALGORITHMS), [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CMD_DEFVALUE), [ExpressionSeedIdentifier] ((IntegerArgumentType)atype).isSigned(), [VariableSeedIdentifier] cmdEnd, [ExpressionSeedIdentifier] "int".equals(rawtype), [VariableSeedIdentifier] ss, [AssignmentSeedIdentifier] ((IntegerParameterType)ptype).encoding=intStringEncoding, [ExpressionSeedIdentifier] container == null, [ExpressionSeedIdentifier] ptype instanceof IntegerParameterType, [AssignmentSeedIdentifier] tas=cells[IDX_CMDVERIF_ONSUCCESS].getContents(), [MethodInvocationSeedIdentifier] toMatchCriteria(spaceSystem,contextString), [AssignmentSeedIdentifier] absoluteoffset+=relpos, [AssignmentSeedIdentifier] se.repeatEntry=new Repeat(), [VariableSeedIdentifier] ta, [VariableSeedIdentifier] expressions, [ExpressionSeedIdentifier] !FORMAT_VERSION.equals(version), [ExpressionSeedIdentifier] "out".equalsIgnoreCase(paraInout), [AssignmentSeedIdentifier] ((IntegerParameterType)param.parameterType).encoding.byteOrder=ByteOrder.LITTLE_ENDIAN, [ExpressionSeedIdentifier] !repeat.equals(""), [AssignmentSeedIdentifier] rParamName=rValue.substring(1), [VariableSeedIdentifier] inputParameterRefs, [AssignmentSeedIdentifier] minInclusive=Long.decode(cells[IDX_CMD_RANGELOW].getContents()), [VariableSeedIdentifier] name, [ExpressionSeedIdentifier] flags.contains("A"), [AssignmentSeedIdentifier] atype=new BooleanArgumentType(name), [VariableSeedIdentifier] cwr, [AssignmentSeedIdentifier] units=cells[IDX_CMD_ENGUNIT].getContents(), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALGO_PARA_FLAGS), [MethodInvocationSeedIdentifier] addRepeat(se,repeat), [VariableSeedIdentifier] ssFile, [AssignmentSeedIdentifier] ((EnumeratedParameterType)param.parameterType).encoding.byteOrder=ByteOrder.LITTLE_ENDIAN, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDOPT_SIGNIFICANCE), [MethodInvocationSeedIdentifier] loadParametersSheet(spaceSystem,sheetNamePrefix + SHEET_DERIVED_PARAMETERS,DataSource.DERIVED), [AssignmentSeedIdentifier] cells=jumpToRow(sheet,paramEnd), [VariableSeedIdentifier] endBracket, [ExpressionSeedIdentifier] j < end, [VariableSeedIdentifier] useCalibrated, [VariableSeedIdentifier] paraInout, [VariableSeedIdentifier] commands, [ExpressionSeedIdentifier] units != null, [ExpressionSeedIdentifier] "5.2".compareTo(fileFormatVersion) > 0, [VariableSeedIdentifier] atype, [AssignmentSeedIdentifier] relpos=Integer.decode(cells[IDX_CONT_RELPOS].getContents()), [ExpressionSeedIdentifier] "uint64".equalsIgnoreCase(engType), [ExpressionSeedIdentifier] flags.contains("a"), [MethodInvocationSeedIdentifier] loadSpaceSystem("",rootSpaceSystem), [ExpressionSeedIdentifier] "float".equalsIgnoreCase(rawType), [AssignmentSeedIdentifier] tas=cells[IDX_CMDVERIF_ONTIMEOUT].getContents(), [ExpressionSeedIdentifier] cmd == null, [AssignmentSeedIdentifier] fve=new FixedValueEntry(counter,container,absoluteOffset,ReferenceLocationType.containerStart,argname,binaryValue,sizeInBits), [VariableSeedIdentifier] spaceSystem, [ExpressionSeedIdentifier] compareParam != null, [ExpressionSeedIdentifier] alarm != null, [ExpressionSeedIdentifier] spec.charAt(i) == ')', [ExpressionSeedIdentifier] "uint".equalsIgnoreCase(engtype), [VariableSeedIdentifier] xas, [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CMDVERIF_CHECKWINDOW), [ExpressionSeedIdentifier] !"enumerated".equalsIgnoreCase(engType), [ExpressionSeedIdentifier] "OnValueChange".equalsIgnoreCase(cells[IDX_ALARM_REPORT].getContents()), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_RELPOS), [ExpressionSeedIdentifier] minViolations == -1, [ExpressionSeedIdentifier] paraRef.startsWith(SystemParameterDb.YAMCS_CMD_SPACESYSTEM_NAME), [VariableSeedIdentifier] cells, [AssignmentSeedIdentifier] rParam=spaceSystem.getParameter(rParamName), [ExpressionSeedIdentifier] encoding instanceof StringDataEncoding, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_SIZEINBITS), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CONT_FLAGS), [AssignmentSeedIdentifier] fileFormatVersion=version, [AssignmentSeedIdentifier] ptype=new StringParameterType(name), [ExpressionSeedIdentifier] !"JavaScript".equals(algorithmLanguage), [ExpressionSeedIdentifier] !"".equals(condition.trim()), [MethodInvocationSeedIdentifier] loadCommandSheet(spaceSystem,sheetNamePrefix + SHEET_COMMANDS), [AssignmentSeedIdentifier] cmd.argumentAssignmentList=toArgumentAssignmentList(argAssignment), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_ENGUNIT), [AssignmentSeedIdentifier] encoding=new StringDataEncoding(name,StringDataEncoding.SizeType.Fixed), [VariableSeedIdentifier] idx, [AssignmentSeedIdentifier] paraInout=cells[IDX_ALGO_PARA_INOUT].getContents(), [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_CRITICAL_TRIGGER), [ExpressionSeedIdentifier] !bitls.isEmpty(), [VariableSeedIdentifier] bitls, [ExpressionSeedIdentifier] spec.charAt(i) == '(', [VariableSeedIdentifier] sheetCompatVersion, [AssignmentSeedIdentifier] ((FloatParameterType)ptype).encoding=floatStringEncoding, [AssignmentSeedIdentifier] ((FloatParameterType)ptype).encoding=encoding, [ExpressionSeedIdentifier] engType.equalsIgnoreCase("FixedValue"), [AssignmentSeedIdentifier] ((FloatParameterType)param.parameterType).encoding.byteOrder=ByteOrder.LITTLE_ENDIAN, [VariableSeedIdentifier] rParamCalibrated, [VariableSeedIdentifier] triggerSet, [AssignmentSeedIdentifier] cond=new Condition(OperatorType.stringToOperator(op),lParamRef,rValue), [VariableSeedIdentifier] quotes, [AssignmentSeedIdentifier] msg=cells[IDX_LOG_MESSAGE].getContents(), [AssignmentSeedIdentifier] atype=new FloatArgumentType(name), [VariableSeedIdentifier] param, [ExpressionSeedIdentifier] size != -1, [VariableSeedIdentifier] ws, [ExpressionSeedIdentifier] calib != null, [AssignmentSeedIdentifier] pol_coef[j - start]=getNumber(cells[IDX_CALIB_CALIB1]), [ExpressionSeedIdentifier] hasColumn(cells,IDX_PARAM_CALIBRATION), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDOPT_NAME), [AssignmentSeedIdentifier] byteOrder=ByteOrder.LITTLE_ENDIAN, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_CALIBRATION), [VariableSeedIdentifier] comp, [VariableSeedIdentifier] aname, [MethodInvocationSeedIdentifier] switchToSheet(SHEET_CHANGELOG,required), [MethodInvocationSeedIdentifier] toArgumentAssignment(part), [ExpressionSeedIdentifier] !ssFile.exists(), [AssignmentSeedIdentifier] atype=new EnumeratedArgumentType(calib), [ExpressionSeedIdentifier] hasColumn(cells,IDX_PARAM_DESCRIPTION), [ExpressionSeedIdentifier] "OnSeverityChange".equalsIgnoreCase(cells[IDX_ALARM_REPORT].getContents()), [VariableSeedIdentifier] counter, [AssignmentSeedIdentifier] ss1=new SpaceSystem(a[i]), [ExpressionSeedIdentifier] sizeInBits == -1, [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CALIB_CALIB1), [ExpressionSeedIdentifier] rawType.toLowerCase().startsWith("terminatedstring"), [ExpressionSeedIdentifier] parent == null, [AssignmentSeedIdentifier] ((BinaryArgumentType)atype).encoding=encoding, [MethodInvocationSeedIdentifier] loadParametersSheet(spaceSystem,sheetNamePrefix + SHEET_TELEMETERED_PARAMETERS,DataSource.TELEMETERED), [ExpressionSeedIdentifier] spec.charAt(i) == ';', [VariableSeedIdentifier] wbf, [VariableSeedIdentifier] compareParam, [AssignmentSeedIdentifier] argAssignment=cells[IDX_CMD_ARG_ASSIGNMENT].getContents(), [ExpressionSeedIdentifier] "int64".equalsIgnoreCase(engType), [VariableSeedIdentifier] container, [AssignmentSeedIdentifier] rParamCalibrated=false, [VariableSeedIdentifier] prefix, [VariableSeedIdentifier] criteria, [VariableSeedIdentifier] range, [VariableSeedIdentifier] parentCmd, [VariableSeedIdentifier] lParamName, [MethodInvocationSeedIdentifier] switchToSheet(sheetName,false), [ExpressionSeedIdentifier] required, [ExpressionSeedIdentifier] ss1 == null, [ExpressionSeedIdentifier] "pointpair".equalsIgnoreCase(type), [ExpressionSeedIdentifier] "boolean".equalsIgnoreCase(engtype), [AssignmentSeedIdentifier] intStringEncoding.defaultCalibrator=c, [VariableSeedIdentifier] value, [VariableSeedIdentifier] binaryValue, [VariableSeedIdentifier] lParam, [ExpressionSeedIdentifier] para.getParameterType() instanceof FloatParameterType, [ExpressionSeedIdentifier] i < spec.length(), [ExpressionSeedIdentifier] ptype instanceof BaseDataType, [VariableSeedIdentifier] sheetName, [VariableSeedIdentifier] rValue, [VariableSeedIdentifier] matcher, [MethodInvocationSeedIdentifier] getSize(param,sc), [VariableSeedIdentifier] rParamRef, [ExpressionSeedIdentifier] startBracket != -1, [ExpressionSeedIdentifier] "fixedstring".equalsIgnoreCase(rawType), [ExpressionSeedIdentifier] "".equals(calib), [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDOPT_TXCONST), [VariableSeedIdentifier] paraname, [MethodInvocationSeedIdentifier] loadChangelogSheet(false), [AssignmentSeedIdentifier] se.repeatEntry.count=new FixedIntegerValue(rep), [ExpressionSeedIdentifier] "n".equals(calib), [ExpressionSeedIdentifier] "float".equalsIgnoreCase(rawtype), [VariableSeedIdentifier] dataSource, [ExpressionSeedIdentifier] "binary".equalsIgnoreCase(engType), [ExpressionSeedIdentifier] absoluteOffset == -1, [VariableSeedIdentifier] opType, [VariableSeedIdentifier] triggerValue, [AssignmentSeedIdentifier] ptype=new BinaryParameterType(name), [VariableSeedIdentifier] flags, [ExpressionSeedIdentifier] atype instanceof BaseDataType, [MethodInvocationSeedIdentifier] jumpToRow(sheet,j), [VariableSeedIdentifier] cond, [VariableSeedIdentifier] type, [VariableSeedIdentifier] relpos, [AssignmentSeedIdentifier] enumeration=new EnumerationDefinition(), [VariableSeedIdentifier] fireRateMs, [MethodInvocationSeedIdentifier] validateNameType(name), [ExpressionSeedIdentifier] reportType != AlarmType.DEFAULT_REPORT_TYPE, [VariableSeedIdentifier] minViolations, [AssignmentSeedIdentifier] atype=new IntegerArgumentType(name), [AssignmentSeedIdentifier] lParamCalibrated=false, [ExpressionSeedIdentifier] triggerText.startsWith("OnParameterUpdate"), [ExpressionSeedIdentifier] !hasColumn(cells,IDX_CMD_SIZEINBITS), [ExpressionSeedIdentifier] cells.length > IDX_ALGO_PARA_NAME, [ExpressionSeedIdentifier] rParamRef != null, [ExpressionSeedIdentifier] !m.matches(), [AssignmentSeedIdentifier] atype=new StringArgumentType(name), [ExpressionSeedIdentifier] para.getParameterType() instanceof IntegerParameterType, [ExpressionSeedIdentifier] "enumerated".equalsIgnoreCase(engType), [ExpressionSeedIdentifier] flags != null, [AssignmentSeedIdentifier] encoding=new StringDataEncoding(name,StringDataEncoding.SizeType.LeadingSize), [VariableSeedIdentifier] history, [AssignmentSeedIdentifier] rParamName=rParamName.substring(0,rParamName.length() - 4), [ExpressionSeedIdentifier] repeated != -1, [VariableSeedIdentifier] previousContext, [ExpressionSeedIdentifier] rValue.endsWith("”"), [MethodInvocationSeedIdentifier] jumpToRow(sheet,0), [ExpressionSeedIdentifier] "int".equals(rawType), [AssignmentSeedIdentifier] absoluteoffset=-1, [AssignmentSeedIdentifier] end=true, [ExpressionSeedIdentifier] i < a.length - 1, [AssignmentSeedIdentifier] absoluteoffset=0, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_RANGELOW), [AssignmentSeedIdentifier] parent=parent.substring(0,x), [AssignmentSeedIdentifier] container.sizeInBits=containerSizeInBits, [VariableSeedIdentifier] byteOrder, [VariableSeedIdentifier] msg, [ExpressionSeedIdentifier] version.equals(supportedVersion), [ExpressionSeedIdentifier] "boolean".equalsIgnoreCase(rawType), [ExpressionSeedIdentifier] firstRow[i] != null, [ExpressionSeedIdentifier] "si".equals(intRepresentation), [VariableSeedIdentifier] cmdName, [AssignmentSeedIdentifier] ptype=new BooleanParameterType(name), [ExpressionSeedIdentifier] rawType.toLowerCase().startsWith("int"), [AssignmentSeedIdentifier] ((IntegerDataEncoding)encoding).encoding=IntegerDataEncoding.Encoding.twosCompliment, [AssignmentSeedIdentifier] ctx.sheet=sheetName, [ExpressionSeedIdentifier] "uint".equalsIgnoreCase(rawType), [ExpressionSeedIdentifier] repeatparam == null, [MethodInvocationSeedIdentifier] toMatchCriteria(spaceSystem,condition), [VariableSeedIdentifier] ucomp, [VariableSeedIdentifier] tas, [AssignmentSeedIdentifier] description=cells[IDX_CONT_DESCRIPTION].getContents(), [AssignmentSeedIdentifier] start=paramEnd, [ExpressionSeedIdentifier] ptype instanceof StringParameterType, [ExpressionSeedIdentifier] type == CommandVerifier.Type.algorithm, [ExpressionSeedIdentifier] dateCell.getType() == CellType.DATE, [AssignmentSeedIdentifier] ((EnumeratedParameterType)ptype).encoding=intStringEncoding, [ExpressionSeedIdentifier] hasColumn(cells,IDX_ALARM_DISTRESS_VALUE), [VariableSeedIdentifier] para, [ExpressionSeedIdentifier] rValue.startsWith("$$"), [MethodInvocationSeedIdentifier] jumpToRow(sheet,start), [MethodInvocationSeedIdentifier] jumpToRow(sheet,end), [AssignmentSeedIdentifier] ((IntegerParameterType)ptype).signed=false, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMD_ARG_ASSIGNMENT), [VariableSeedIdentifier] namespace, [VariableSeedIdentifier] sizeInBitsOfSizeTag, [ExpressionSeedIdentifier] ptype instanceof BooleanParameterType, [VariableSeedIdentifier] FIRERATE_PATTERN, [ExpressionSeedIdentifier] sizeInBits != -1, [ExpressionSeedIdentifier] "".equals(contents), [ExpressionSeedIdentifier] param.parameterType instanceof FloatParameterType, [ExpressionSeedIdentifier] parent != null, [ExpressionSeedIdentifier] ptype instanceof FloatParameterType, [VariableSeedIdentifier] date, [VariableSeedIdentifier] error, [AssignmentSeedIdentifier] op="==", [MethodInvocationSeedIdentifier] hasColumn(cells,IDX_ALGO_PARA_REF), [VariableSeedIdentifier] alias, [ExpressionSeedIdentifier] cmd.getDefaultSignificance() != null, [AssignmentSeedIdentifier] useCalibrated=false, [VariableSeedIdentifier] absoluteOffset, [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_ONTIMEOUT), [VariableSeedIdentifier] repeatparam, [ExpressionSeedIdentifier] cells[0].getContents().length() > 0, [VariableSeedIdentifier] spec, [AssignmentSeedIdentifier] msg+=" Instead an enumeration with this name exists.", [ExpressionSeedIdentifier] hasColumn(cells,IDX_CMDVERIF_CHECKWINDOW_RELATIVETO), [VariableSeedIdentifier] containerName, [VariableSeedIdentifier] splitted, [AssignmentSeedIdentifier] spec=spec.trim(), [AssignmentSeedIdentifier] start=end, [AssignmentSeedIdentifier] encoding=new FloatDataEncoding(name,bitlength), [ExpressionSeedIdentifier] !allowedInNameType.matcher(name).matches(), [ExpressionSeedIdentifier] rawtype.toLowerCase().startsWith("int"), [VariableSeedIdentifier] expint, [VariableSeedIdentifier] alarm, [VariableSeedIdentifier] containerSizeInBits, [VariableSeedIdentifier] lParamRef, [VariableSeedIdentifier] sheet, [MethodInvocationSeedIdentifier] jumpToRow(sheet,paramEnd), [ExpressionSeedIdentifier] !draconicXtceNameRestrictions, [AssignmentSeedIdentifier] lParamName=lParamName.substring(0,lParamName.length() - 4))
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(MODIFIED)] xtceDb
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(ADDED)] sb
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(MODIFIED)] this.xtceDb=xtceDb
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(ADDED)] !currentGroups.isEmpty()
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(MODIFIED)] !paraGroups.isEmpty()
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(ADDED)] req.hasQueryParameter("paragroup")
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(ADDED)] req
2020-04-11 22:04:12 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(ADDED)] paraGroups
2020-04-11 22:04:13 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(REMOVED)] sheet == null
2020-04-11 22:04:15 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(ADDED)] sheetNamePrefix
2020-04-11 22:04:16 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(MODIFIED)] loadCommandVerificationSheet(spaceSystem,sheetNamePrefix + SHEET_COMMANDVERIFICATION)
2020-04-11 22:04:26 DEBUG ChangedSeedsCollector:58 - Update seed change status: [HashSet(REMOVED)] sheet
2020-04-11 22:04:26 INFO  JRelifixMain$:49 - Done Initializing Collectors!
2020-04-11 22:04:26 INFO  JRelifixMain$:51 - Building source file contents (ASTRewriter) ...
2020-04-11 22:04:26 INFO  JRelifixMain$:55 - Done building source file contents!
2020-04-11 22:04:26 INFO  JRelifixMain$:57 - Initializing Compiler/TestCases Invoker ...
2020-04-11 22:04:34 DEBUG TestCaseValidator:20 - Initially Negative Tests(-): org.yamcs.xtceproc.XtceCommandEncodingTest#cgsLikeStringCommand
2020-04-11 22:04:34 INFO  JRelifixMain$:68 - Done initializing!
2020-04-11 22:04:34 INFO  JRelifixMain$:70 - Initializing Mutation Generator ...
2020-04-11 22:04:34 INFO  JRelifixMain$:72 - Done initializing!
2020-04-11 22:04:34 INFO  JRelifixMain$:74 - Trying to set up fault localization ...
2020-04-11 22:04:34 INFO  JRelifixMain$:122 - Doing localization with predefined faults...
2020-04-11 22:04:34 INFO  JRelifixMain$:159 - Done localization!
2020-04-11 22:04:34 INFO  JRelifixMain$:162 - Considering top 10 fault locations
2020-04-11 22:04:34 INFO  JRelifixMain$:76 - Finished fault localization!
2020-04-11 22:04:34 INFO  JRelifixMain$:77 - Transforming faults to Java Nodes ...
2020-04-11 22:04:34 INFO  JRelifixMain$:84 - Done Transforming!
2020-04-11 22:04:34 INFO  JRelifixMain$:85 - Faults after transforming to Java Nodes:
2020-04-11 22:04:34 INFO  JRelifixMain$:86 - net.bqc.jrelifix.identifier.fault.PredefinedFaultIdentifier@ee80cad0 -> int i=1;
2020-04-11 22:04:34 INFO  JRelifixMain$:89 - Running Repair Engine ...
2020-04-11 22:04:34 DEBUG JRelifixEngine:62 - Condition Expression Set for Engine: HashSet([ExpressionSeedIdentifier] !currentGroups.isEmpty(), [ExpressionSeedIdentifier] !paraGroups.isEmpty(), [ExpressionSeedIdentifier] sheet == null, [ExpressionSeedIdentifier] req.hasQueryParameter("paragroup"), [AssignmentDecoratorSeedIdentifier] this.xtceDb != xtceDb)
2020-04-11 22:04:34 DEBUG JRelifixEngine:72 - Initial Operators: Queue(REVERT)
2020-04-11 22:04:34 DEBUG JRelifixEngine:73 - Secondary Operators: Queue(NEGATE, ADDIF, ADDCON, CONVERT)
2020-04-11 22:04:34 DEBUG JRelifixEngine:81 - [FAULT] Try: net.bqc.jrelifix.identifier.fault.PredefinedFaultIdentifier@ee80cad0 -> int i=1;
2020-04-11 22:04:34 DEBUG JRelifixEngine:89 - [OPERATOR] Candidates: Queue(REVERT)
2020-04-11 22:04:34 DEBUG JRelifixEngine:93 - [OPERATOR] Try: REVERT
2020-04-11 22:04:34 DEBUG RevertMutation:130 - REVERT: Add removedly statement: if (sheet == null) return;
2020-04-11 22:04:34 DEBUG JRelifixEngine:112 - ==========> AFTER MUTATING
2020-04-11 22:04:40 DEBUG JRelifixEngine:114 - [COMPILE] Status: COMPILED
2020-04-11 22:04:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#cgsLikeStringCommand |
2020-04-11 22:04:40 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------/
2020-04-11 22:04:40 DEBUG JRelifixEngine:121 -  ==> [VALIDATION] REDUCED TS: ✓
2020-04-11 22:04:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#cgsLikeStringCommand |
2020-04-11 22:04:41 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------/
2020-04-11 22:04:41 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ParameterArchiveIntegrationTest#testRestRetrieval |
2020-04-11 22:04:53 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:04:53 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ParameterArchiveIntegrationTest#testReplayFillup1 |
2020-04-11 22:04:53 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:04:53 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ui.eventviewer.UtilsTest#testGlobToRegExp |
2020-04-11 22:04:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:04:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ui.eventviewer.UtilsTest#testIsMatch |
2020-04-11 22:04:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:04:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ui.eventviewer.UtilsTest#testGetAllMatched |
2020-04-11 22:04:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:04:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ContainerRequestManagerTest#testSubscriptions |
2020-04-11 22:04:55 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:04:55 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ComVerifIntegrationTest#testCommandVerificationContainter |
2020-04-11 22:05:09 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------------/
2020-04-11 22:05:09 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ComVerifIntegrationTest#testCommandVerificationAlgorithm |
2020-04-11 22:05:18 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------------/
2020-04-11 22:05:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.archive.CcsdsTmIndexTest#testApidIndexSameTimeAndWraparound |
2020-04-11 22:05:18 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------------/
2020-04-11 22:05:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.archive.CcsdsTmIndexTest#testApidIndex |
2020-04-11 22:05:18 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------/
2020-04-11 22:05:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.archive.CcsdsTmIndexTest#testCompare |
2020-04-11 22:05:19 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:05:19 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.archive.PpTupleTranslatorTest#testTranslation |
2020-04-11 22:05:24 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:05:24 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.archive.CmdHistoryRecordingTest#testRecording |
2020-04-11 22:05:26 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:05:26 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.archive.EventRecordingTest#testRecording |
2020-04-11 22:05:30 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------/
2020-04-11 22:05:30 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.security.PasswordHashTest#hash_validate_ok |
2020-04-11 22:05:32 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:05:32 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.YamcsServerArtemisTest#testRetrieveMdb |
2020-04-11 22:05:33 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------/
2020-04-11 22:05:33 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.mdb.XtceToGpbAssemblerTest#toCommandInfo_int_test |
2020-04-11 22:05:33 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------------/
2020-04-11 22:05:33 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.mdb.XtceToGpbAssemblerTest#toCommandInfo_calib_test |
2020-04-11 22:05:34 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------/
2020-04-11 22:05:34 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.mdb.XtceToGpbAssemblerTest#toCommandInfo_float_test |
2020-04-11 22:05:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------/
2020-04-11 22:05:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.mdb.NameDescriptionSearchMatcherTest#testSearchMatch |
2020-04-11 22:05:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------------/
2020-04-11 22:05:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testSimpleMatch |
2020-04-11 22:05:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:05:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testSimpleOptionalMatch |
2020-04-11 22:05:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:05:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testSimpleStarMatch |
2020-04-11 22:05:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:05:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testDistinctMethodMatch |
2020-04-11 22:05:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:05:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testMultipleRouteMatch |
2020-04-11 22:05:37 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:05:37 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testMultipleRouteMatching |
2020-04-11 22:05:37 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:05:37 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testRouteParams |
2020-04-11 22:05:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:05:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testUnmatchedMethod |
2020-04-11 22:05:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:05:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testUnmatchedMethod_multipleRoutes |
2020-04-11 22:05:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------/
2020-04-11 22:05:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RouterTest#testUnmatchedURI |
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.archive.RestDownsamplerTest#testSampling |
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RestRequestTest#testMediaType_cross_match |
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RestRequestTest#testMediaType_wildcard |
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:05:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RestRequestTest#testMediaType_ContentType_only |
2020-04-11 22:05:40 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------/
2020-04-11 22:05:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RestRequestTest#testMediaType_unsupported_ContentType |
2020-04-11 22:05:40 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------------------/
2020-04-11 22:05:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.web.rest.RestRequestTest#testMediaType_unspecified |
2020-04-11 22:05:40 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:05:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.AlarmTest#testEnumerationAlarms |
2020-04-11 22:05:41 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------/
2020-04-11 22:05:41 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.AlarmTest#testAlarmReportingWithoutSubscription |
2020-04-11 22:05:41 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:05:41 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.AlarmTest#testOnValueChangeReport |
2020-04-11 22:05:42 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------/
2020-04-11 22:05:42 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.AlarmTest#testFloatLimits |
2020-04-11 22:05:43 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------/
2020-04-11 22:05:43 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.AlarmTest#testIntegerLimits |
2020-04-11 22:05:43 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------/
2020-04-11 22:05:43 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.artemis.StreamAdapterTest#testHornet2Stream |
2020-04-11 22:05:44 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:05:44 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.artemis.StreamAdapterTest#testStream2Hornet |
2020-04-11 22:05:45 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:05:45 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.artemis.ProducerKillerTest#testProducerKiller |
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.alarms.AlarmServerTest#test1 |
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------/
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.alarms.AlarmServerTest#testAutoAck |
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------/
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.alarms.AlarmServerTest#testAcknowledgeButNoAlarm |
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:05:47 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.alarms.AlarmServerTest#testAcknowledgeButNoParameterMatch |
2020-04-11 22:05:48 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------------/
2020-04-11 22:05:48 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.alarms.AlarmServerTest#testMoreSevere |
2020-04-11 22:05:48 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:05:48 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.alarms.AlarmServerTest#test2 |
2020-04-11 22:05:48 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------/
2020-04-11 22:05:48 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ParameterArchiveTest#test1 |
2020-04-11 22:05:49 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:05:49 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ParameterArchiveTest#testMultipleParameters |
2020-04-11 22:05:49 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------/
2020-04-11 22:05:49 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ParameterArchiveTest#testSingleParameterMultipleGroups |
2020-04-11 22:05:50 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------------------------/
2020-04-11 22:05:50 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ParameterArchiveTest#testRawEqualsEngParameter |
2020-04-11 22:05:50 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------------------/
2020-04-11 22:05:50 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ParameterArchiveTest#testSingleParameter |
2020-04-11 22:05:51 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------------/
2020-04-11 22:05:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.StringValueSegmentTest#testStringVsEnum |
2020-04-11 22:05:51 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------------/
2020-04-11 22:05:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ParameterGroupIdMapTest#test1 |
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.TimeSegmentTest#testIllegalAdd |
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.BooleanValueSegmentTest#test |
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ObjectSegmentTest#test |
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:05:52 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ObjectSegmentTest#testRangesDescending |
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------/
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ObjectSegmentTest#testRangesAscending |
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------/
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ObjectSegmentTest#testEnumFprof |
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.LongValueSegmentTest#testUnsigned |
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:05:53 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.LongValueSegmentTest#testSigned |
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.ParameterIdMapTest#test1 |
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.IntValueSegmentTest#testRandom |
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.IntValueSegmentTest#testLongNonRandom |
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------/
2020-04-11 22:05:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.IntValueSegmentTest#testShortNonRandom |
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------/
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.GenericValueSegmentTest#test1 |
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.DoubleValueSegmentTest#test |
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.FloatValueSegmentTest#test |
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameterarchive.FloatValueSegmentTest#test2 |
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:05:55 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.tctm.TcpTcUplinkerTest#testConfig |
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------/
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.tctm.TmFileReaderTest#testHrdpReader |
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.tctm.TmFileReaderTest#testRawCcsdsReader |
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------/
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testJavascriptPerformanceFloatAdd |
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------------------/
2020-04-11 22:05:56 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testFloatAdd |
2020-04-11 22:05:58 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:05:58 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testSlidingWindow |
2020-04-11 22:06:00 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:06:00 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testEvents |
2020-04-11 22:06:02 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:06:02 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testExternalLibrary |
2020-04-11 22:06:03 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:06:03 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testAlgorithmChaining |
2020-04-11 22:06:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------/
2020-04-11 22:06:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testAlgorithmChainingWithWindowing |
2020-04-11 22:06:07 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------------/
2020-04-11 22:06:07 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testEnumCalibration |
2020-04-11 22:06:09 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:06:09 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testBooleanAlgorithms |
2020-04-11 22:06:11 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------/
2020-04-11 22:06:11 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testFloatCalibration |
2020-04-11 22:06:13 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------/
2020-04-11 22:06:13 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testSeparateUpdate |
2020-04-11 22:06:15 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:06:15 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testMarkedNotUpdated |
2020-04-11 22:06:16 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------/
2020-04-11 22:06:16 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testSelectiveRun |
2020-04-11 22:06:18 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:06:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerTest#testOnPeriodicRate |
2020-04-11 22:06:30 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:06:30 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerPyTest#testExternalLibrary |
2020-04-11 22:06:32 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------/
2020-04-11 22:06:32 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerPyTest#testFloats |
2020-04-11 22:06:34 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:06:34 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmManagerPyTest#testSignedIntegers |
2020-04-11 22:06:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------/
2020-04-11 22:06:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.AlgorithmWithContextTest#testIt |
2020-04-11 22:06:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:06:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.algorithms.WindowBufferTest#test |
2020-04-11 22:06:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------/
2020-04-11 22:06:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.management.ProcessorsTest#empty |
2020-04-11 22:06:44 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------/
2020-04-11 22:06:44 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.management.ProcessorsTest#createProcessorWithoutClient |
2020-04-11 22:06:51 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------/
2020-04-11 22:06:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.management.ProcessorsTest#createAndSwitchProcessor |
2020-04-11 22:07:03 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:07:03 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#test1 |
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------/
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#test2 |
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------/
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testperf |
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------/
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testEquals |
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testAscendingIterator |
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:07:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testDescendingIterator |
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testIteratorsEmptyArray |
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testEncodeDecode |
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testEncodeDecodeNegative |
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.SortedIntArrayTest#testEncodeDecodeZeroLength |
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:07:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.TimeEncodingTest#checkMaxInstantValue |
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.TimeEncodingTest#findMaxInstantValue |
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.VarIntUtilTest#testVarInt32 |
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------/
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.VarIntUtilTest#testInvalid |
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------/
2020-04-11 22:07:06 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.utils.VarIntUtilTest#testDeltaDeltaZigZag |
2020-04-11 22:07:07 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:07:07 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.RestClientTest#testGetYamcsInstances |
2020-04-11 22:07:15 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:07:15 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.RestClientTest#testGetYamcsInstancesUnauthorized |
2020-04-11 22:07:22 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:07:22 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.RestClientTest#testGetBulk |
2020-04-11 22:07:30 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------/
2020-04-11 22:07:30 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#floatCommand |
2020-04-11 22:07:31 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:07:31 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#floatCommandDefault |
2020-04-11 22:07:31 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------/
2020-04-11 22:07:31 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#stringCommand |
2020-04-11 22:07:32 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:07:32 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#binaryCommand |
2020-04-11 22:07:32 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:07:32 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#littleEndianUint |
2020-04-11 22:07:33 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:07:33 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#booleanCommandTrue |
2020-04-11 22:07:33 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:07:33 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#booleanCommandFalseTrue |
2020-04-11 22:07:34 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------------/
2020-04-11 22:07:34 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#int64CommandArgumentRange |
2020-04-11 22:07:34 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------------/
2020-04-11 22:07:34 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#int64CommandArgumentEncoding |
2020-04-11 22:07:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------------/
2020-04-11 22:07:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceCommandEncodingTest#testStringEncodedTc |
2020-04-11 22:07:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------/
2020-04-11 22:07:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceDbFactoryTest#testInstantiation |
2020-04-11 22:07:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:07:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceDbFactoryTest#testNamespaces |
2020-04-11 22:07:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:07:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceDbFactoryTest#testResolveReference |
2020-04-11 22:07:37 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:07:37 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_1 |
2020-04-11 22:07:37 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:07:37 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_9BooleanValues |
2020-04-11 22:07:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------/
2020-04-11 22:07:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testContainerSubscriptionPKT1_1 |
2020-04-11 22:07:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------/
2020-04-11 22:07:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_7FloatStructure |
2020-04-11 22:07:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------/
2020-04-11 22:07:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_11_longuint32 |
2020-04-11 22:07:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:07:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_12_stringenum |
2020-04-11 22:07:40 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:07:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_12_invalidstringenum |
2020-04-11 22:07:41 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------------/
2020-04-11 22:07:41 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT3_dynamicSize |
2020-04-11 22:07:41 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:07:41 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testProcessPacket_startContainer |
2020-04-11 22:07:42 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------------/
2020-04-11 22:07:42 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_List |
2020-04-11 22:07:42 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:07:42 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_AND |
2020-04-11 22:07:43 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:07:43 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_PKT1_OR |
2020-04-11 22:07:43 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:07:43 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_PKT1_AND_OR |
2020-04-11 22:07:44 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:07:44 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_PKT1_OR_AND |
2020-04-11 22:07:44 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:07:44 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_PKT1_RANGE |
2020-04-11 22:07:45 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:07:45 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_2 |
2020-04-11 22:07:46 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:07:46 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_3StringStructure |
2020-04-11 22:07:46 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------/
2020-04-11 22:07:46 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_4StringFloatStructure |
2020-04-11 22:07:47 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------------/
2020-04-11 22:07:47 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_4InvalidStringFloatStructure |
2020-04-11 22:07:47 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------------/
2020-04-11 22:07:47 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_5StringIntStructure |
2020-04-11 22:07:48 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------------/
2020-04-11 22:07:48 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtceproc.XtceTmExtractorTest#testPKT1_5InvalidStringIntStructure |
2020-04-11 22:07:48 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------------------/
2020-04-11 22:07:48 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtce.SpreadsheetLoaderTest#testCommandAliases |
2020-04-11 22:07:49 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:07:49 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtce.SpreadsheetLoaderTest#testAlgorithmAliases |
2020-04-11 22:07:49 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:07:49 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtce.SpreadsheetLoaderTest#testContainerAliases |
2020-04-11 22:07:50 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:07:50 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtce.SpreadsheetLoaderTest#testParameterAliases |
2020-04-11 22:07:50 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:07:50 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.xtce.SpreadsheetLoaderTest#testCommandVerifiers |
2020-04-11 22:07:51 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:07:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.api.artemis.ArtemisEventProducerTest#testEventProducer |
2020-04-11 22:07:52 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------/
2020-04-11 22:07:52 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.api.rest.HttpClientTest#testConnectionRefused |
2020-04-11 22:08:00 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:08:00 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.api.rest.HttpClientTest#test404NotFound |
2020-04-11 22:08:07 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:08:07 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.SubsriptionArrayTest#test |
2020-04-11 22:08:07 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:07 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterValueListTest#test1 |
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------/
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterValueListTest#testRemove |
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterValueListTest#testRemoveMany |
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterValueListTest#testIterator |
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterValueListTest#testIterator1 |
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:08:08 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.SoftwareParameterManagerTest#test |
2020-04-11 22:08:11 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:08:11 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterCacheTest#test1 |
2020-04-11 22:08:11 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------/
2020-04-11 22:08:11 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterCacheTest#testCircularity |
2020-04-11 22:08:11 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:08:11 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterCacheTest#testResize |
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterCacheTest#testMaxSize |
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------/
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ParameterCacheTest#testConcurrency |
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.parameter.ValueTest#test |
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------/
2020-04-11 22:08:12 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect1Test#testLike |
2020-04-11 22:08:13 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------/
2020-04-11 22:08:13 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect1Test#testNotLike |
2020-04-11 22:08:14 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:14 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitionManagerTest#createAndIteratePartitions |
2020-04-11 22:08:14 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------------/
2020-04-11 22:08:14 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitionManagerTest#readFromDisk |
2020-04-11 22:08:15 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:08:15 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitionManagerTest#readFromDiskValue |
2020-04-11 22:08:15 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------------/
2020-04-11 22:08:15 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitionManagerTest#readFromDiskTime |
2020-04-11 22:08:16 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:08:16 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitionManagerTest#testNoPartition |
2020-04-11 22:08:16 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:08:16 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectTest#testOrderAscending |
2020-04-11 22:08:16 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <------------------------------------------------------------/
2020-04-11 22:08:16 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectTest#testOrderDescending |
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <-------------------------------------------------------------/
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectTest#testOrderedMerge |
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <----------------------------------------------------------/
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectTest#testInvalidOrder |
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <----------------------------------------------------------/
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectTest#testFollow |
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <----------------------------------------------------/
2020-04-11 22:08:17 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectTest#testNofollow |
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <------------------------------------------------------/
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectTest#testUnspecifiedOrder |
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <--------------------------------------------------------------/
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitioningTest#testIndexPartitioning |
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <------------------------------------------------------------------/
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitioningTest#testDoublePartitioning |
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <-------------------------------------------------------------------/
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.PartitioningTest#testEnumPartitioning |
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <-----------------------------------------------------------------/
2020-04-11 22:08:18 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RDBFactoryTest#testDispose |
2020-04-11 22:08:20 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------/
2020-04-11 22:08:20 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RDBFactoryTest#testBackup |
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbPerformanceTest#testPartition |
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbPerformanceTest#testNoPnameYYYY |
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbPerformanceTest#testNonePartition |
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbPerformanceTest#testNumOpenFiles |
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:08:21 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectPerfTest#test |
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectPerfTest#testPartition |
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectPerfTest#testNoPnameYYYY |
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbSelectPerfTest#testNonePartition |
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:08:22 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.HistogramRebuilderTest#testDeleteValues |
2020-04-11 22:08:23 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------/
2020-04-11 22:08:23 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.HistogramRebuilderTest#testDeleteCfh |
2020-04-11 22:08:23 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:08:23 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.HistogramRebuilderTest#testRebuildAll |
2020-04-11 22:08:24 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------/
2020-04-11 22:08:24 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.TagsTest#testTags |
2020-04-11 22:08:25 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------/
2020-04-11 22:08:25 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.rocksdb.RdbEngineTest#testCreateDrop |
2020-04-11 22:08:25 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:08:25 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelectPerfTest#testFilter1 |
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------/
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.EnumWithPartitionTest#test1 |
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <-----------------------------------------------/
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.EnumWithPartitionTest#test2 |
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <-----------------------------------------------/
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.EnumWithPartitionTest#test3 |
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <-----------------------------------------------/
2020-04-11 22:08:27 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.EnumWithPartitionTest#test4 |
2020-04-11 22:08:28 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <-----------------------------------------------/
2020-04-11 22:08:28 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelectTest#testFilter2 |
2020-04-11 22:08:28 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------/
2020-04-11 22:08:28 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelectTest#testNegative |
2020-04-11 22:08:29 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:29 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelectTest#testFilter1 |
2020-04-11 22:08:29 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------/
2020-04-11 22:08:29 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StandaloneStreamTest#createStreamTest |
2020-04-11 22:08:30 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:08:30 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.ConcurrencyTest#testConcurrentReadAndWrite |
2020-04-11 22:08:30 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <--------------------------------------------------------------/
2020-04-11 22:08:30 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSqlParserTest#testCreateDropTable |
2020-04-11 22:08:31 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:08:31 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSqlParserTest#testExists |
2020-04-11 22:08:31 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:08:31 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSqlParserTest#testErrors |
2020-04-11 22:08:32 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:08:32 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.TableDefinitionSerializationTest#testPartitioningSpecSerialization |
2020-04-11 22:08:32 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------------------/
2020-04-11 22:08:32 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.TableDefinitionSerializationTest#testTableDefinitionSerialization |
2020-04-11 22:08:33 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------------------------/
2020-04-11 22:08:33 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.TableDefinitionSerializationTest#testTableDefinitionSerializationTimeAndValue |
2020-04-11 22:08:33 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------------------------------------/
2020-04-11 22:08:33 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.TableDefinitionSerializationTest#testTableDefinitionSerializationB |
2020-04-11 22:08:34 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------------------/
2020-04-11 22:08:34 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testDuplicate1 |
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testDuplicate2 |
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testInsideLeft |
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testMergeLeft1 |
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:08:35 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testMergeLeft2 |
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testMergeRight |
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testMergeBoth |
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------/
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testCheckStandalone1 |
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testCheckStandalone2 |
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:08:36 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramSegmentTest#testSelectBestMerge |
2020-04-11 22:08:37 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:08:37 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamMergeTest#testTableMerge0 |
2020-04-11 22:08:37 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:08:37 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamMergeTest#testTableMerge1 |
2020-04-11 22:08:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:08:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamMergeTest#testTableMerge2 |
2020-04-11 22:08:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:08:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamMergeTest#testTableMerge3 |
2020-04-11 22:08:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:08:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.EnumTest#test1 |
2020-04-11 22:08:40 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <----------------------------------/
2020-04-11 22:08:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.EnumTest#test2 |
2020-04-11 22:08:40 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <----------------------------------/
2020-04-11 22:08:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.EnumTest#test3 |
2020-04-11 22:08:40 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <----------------------------------/
2020-04-11 22:08:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.DynamicSchemaTableTest#testInsert |
2020-04-11 22:08:41 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:08:41 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.DynamicSchemaTableTest#testInsertAppend |
2020-04-11 22:08:42 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:08:42 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.DynamicSchemaTableTest#testUpsert |
2020-04-11 22:08:42 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------/
2020-04-11 22:08:42 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.DynamicSchemaTableTest#testUpsertAppend |
2020-04-11 22:08:43 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:08:43 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testWindow1 |
2020-04-11 22:08:44 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:44 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testAdd |
2020-04-11 22:08:45 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------/
2020-04-11 22:08:45 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testWindow2 |
2020-04-11 22:08:46 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:46 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testWindow3 |
2020-04-11 22:08:47 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:47 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testWindow4 |
2020-04-11 22:08:48 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:48 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testWindow5 |
2020-04-11 22:08:49 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:49 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testWindow6 |
2020-04-11 22:08:50 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:50 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StreamSelect2Test#testWindow7 |
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------/
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramStreamTest#test1 |
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <---------------------------------------------/
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramStreamTest#test2 |
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <---------------------------------------------/
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramStreamTest#testWithMergeTime |
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <---------------------------------------------------------/
2020-04-11 22:08:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.HistogramStreamTest#testEmpyStream |
2020-04-11 22:08:52 INFO  TestExecutionProcessLauncher:80 - [ 🚫 ] <------------------------------------------------------/
2020-04-11 22:08:52 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.yarch.StarSelectTest#testStar1 |
2020-04-11 22:08:52 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------/
2020-04-11 22:08:52 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.PermissionsTest#testPermissionSendCommand |
2020-04-11 22:09:00 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------/
2020-04-11 22:09:00 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.PermissionsTest#testPermissionGetParameter |
2020-04-11 22:09:07 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:09:07 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.PermissionsTest#testPermissionSetParameter |
2020-04-11 22:09:15 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------/
2020-04-11 22:09:15 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.PermissionsTest#testPermissionUpdateCommandHistory |
2020-04-11 22:09:23 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------------/
2020-04-11 22:09:23 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.PermissionsTest#testPermissionArchive |
2020-04-11 22:09:33 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:09:33 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.PermissionsTest#testAuthenticationWebServices |
2020-04-11 22:09:40 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:09:40 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ArchiveIntegrationTest#testReplay |
2020-04-11 22:09:51 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------/
2020-04-11 22:09:51 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.ArchiveIntegrationTest#testParameterHistory |
2020-04-11 22:10:01 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------/
2020-04-11 22:10:01 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testWsParameter |
2020-04-11 22:10:10 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------/
2020-04-11 22:10:10 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testRestParameterGet |
2020-04-11 22:10:22 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:10:22 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testWsTime |
2020-04-11 22:10:31 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------/
2020-04-11 22:10:31 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testWsParameterSubscriPerformance |
2020-04-11 22:10:31 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------/
2020-04-11 22:10:31 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testRestParameterSetInvalidParam |
2020-04-11 22:10:39 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:10:39 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testRestParameterSetInvalidType |
2020-04-11 22:10:46 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:10:46 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testRestParameterSet |
2020-04-11 22:10:55 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------/
2020-04-11 22:10:55 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testRestParameterSet2 |
2020-04-11 22:11:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:11:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testSendCommandNoTransmissionConstraint |
2020-04-11 22:11:12 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------------------------/
2020-04-11 22:11:12 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testSendCommandFailedTransmissionConstraint |
2020-04-11 22:11:20 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------------------/
2020-04-11 22:11:20 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testSendCommandSucceedTransmissionConstraint |
2020-04-11 22:11:30 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------/
2020-04-11 22:11:30 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testUpdateCommandHistory |
2020-04-11 22:11:38 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------/
2020-04-11 22:11:38 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testWsManagement |
2020-04-11 22:11:46 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------/
2020-04-11 22:11:46 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testChangeReplaySpeed |
2020-04-11 22:11:54 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:11:54 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.IntegrationTest#testServicesStopStart |
2020-04-11 22:12:02 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <---------------------------------------------------/
2020-04-11 22:12:02 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testOneIntArg |
2020-04-11 22:12:02 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <------------------------------------------------------------/
2020-04-11 22:12:02 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testFixedValue |
2020-04-11 22:12:03 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:12:03 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testIntegerArg |
2020-04-11 22:12:03 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-------------------------------------------------------------/
2020-04-11 22:12:03 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testFloatArg |
2020-04-11 22:12:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------/
2020-04-11 22:12:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testLittleEndianFloatArg |
2020-04-11 22:12:04 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <-----------------------------------------------------------------------/
2020-04-11 22:12:04 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testCcsdsTc |
2020-04-11 22:12:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------------/
2020-04-11 22:12:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testValidIntegerRange |
2020-04-11 22:12:05 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------/
2020-04-11 22:12:05 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testCalibration |
2020-04-11 22:12:06 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:12:06 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testInvalidEnum |
2020-04-11 22:12:06 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------/
2020-04-11 22:12:06 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.commanding.CommandingManagerTest#testExceptionOnReassigningInheritanceArgument |
2020-04-11 22:12:07 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <--------------------------------------------------------------------------------------------/
2020-04-11 22:12:07 INFO  TestExecutionProcessLauncher:58 - [Running] org.yamcs.EventCrashHandlerTest#sendErrorEventOk |
2020-04-11 22:12:07 INFO  TestExecutionProcessLauncher:80 - [ ✓ ] <----------------------------------------------------/
2020-04-11 22:12:07 DEBUG JRelifixEngine:124 - ==> [VALIDATION] WHOLE TS: ✓
2020-04-11 22:12:07 DEBUG JRelifixEngine:126 - ==========================================
2020-04-11 22:12:07 DEBUG JRelifixEngine:127 - FOUND A REPAIR (See below patch):
2020-04-11 22:12:07 DEBUG JRelifixEngine:137 - ------------------------------------------
--- src/main/java/org/yamcs/xtce/SpreadsheetLoader.java
+++ src/main/java/org/yamcs/xtce/SpreadsheetLoader.java
@@ -1214,6 +1214,8 @@

     protected void loadCommandVerificationSheet(SpaceSystem spaceSystem, String sheetName) {
         Sheet sheet = switchToSheet(sheetName, false);
+        if (sheet == null)
+			return;
         int i = 1;
         while(i<sheet.getRows()) {
             // search for a new command definition, starting from row i

2020-04-11 22:12:07 DEBUG JRelifixEngine:140 - ==========================================
2020-04-11 22:12:07 INFO  JRelifixMain$:94 - Done Repair!