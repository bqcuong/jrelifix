--- src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java
+++ src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java
@@ -529,36 +529,7 @@
                     prop = constructSetterlessProperty(ctxt, beanDesc, propDef);
                 }
             }
-            // 25-Sep-2014, tatu: No point in finding constructor parameters for abstract types
-            //   (since they are never used anyway)
-            if (isConcrete && propDef.hasConstructorParameter()) {
-                /* If property is passed via constructor parameter, we must
-                 * handle things in special way. Not sure what is the most optimal way...
-                 * for now, let's just call a (new) method in builder, which does nothing.
-                 */
-                // but let's call a method just to allow custom builders to be aware...
-                final String name = propDef.getName();
-                CreatorProperty cprop = null;
-                if (creatorProps != null) {
-                    for (SettableBeanProperty cp : creatorProps) {
-                        if (name.equals(cp.getName()) && (cp instanceof CreatorProperty)) {
-                            cprop = (CreatorProperty) cp;
-                            break;
-                        }
-                    }
-                }
-                if (cprop == null) {
-                    ctxt.reportMappingException("Could not find creator property with name '%s' (in class %s)",
-                            name, beanDesc.getBeanClass().getName());
-                    continue;
-                }
-                if (prop != null) {
-                    cprop.setFallbackSetter(prop);
-                }
-                prop = cprop;
-                builder.addCreatorProperty(cprop);
-                continue;
-            }
+            try {if (isConcrete && propDef.hasConstructorParameter()){final String name=propDef.getName();CreatorProperty cprop=null;if (creatorProps != null){for (SettableBeanProperty cp:creatorProps){if (name.equals(cp.getName()) && (cp instanceof CreatorProperty)){cprop=(CreatorProperty)cp;break;}}}if (cprop == null){ctxt.reportMappingException("Could not find creator property with name '%s' (in class %s)",name,beanDesc.getBeanClass().getName());continue;}if (prop != null){cprop.setFallbackSetter(prop);}prop=cprop;builder.addCreatorProperty(cprop);continue;}} catch (Throwable e){}
 
             if (prop != null) {
                 Class<?>[] views = propDef.findViews();
